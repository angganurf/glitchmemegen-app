{"version":3,"file":"index-Cl29Oxs-.js","sources":["../../node_modules/gradient-gl/shaders/common.glsl.js","../../node_modules/gradient-gl/shaders/a1.glsl.js","../../node_modules/gradient-gl/shaders/a2.glsl.js","../../node_modules/gradient-gl/shaders/b1.glsl.js","../../node_modules/gradient-gl/shaders/b2.glsl.js","../../node_modules/gradient-gl/shaders/b3.glsl.js","../../node_modules/gradient-gl/shaders/b4.glsl.js","../../node_modules/gradient-gl/shaders/b5.glsl.js","../../node_modules/gradient-gl/shaders/f1.glsl.js","../../node_modules/gradient-gl/shaders/f2.glsl.js","../../node_modules/gradient-gl/shaders/f3.glsl.js","../../node_modules/gradient-gl/shaders/n1.glsl.js","../../node_modules/gradient-gl/shaders/n2.glsl.js","../../node_modules/gradient-gl/shaders/index.js","../../node_modules/gradient-gl/index.js","../../src/svgcap.js","../../src/webm.js","../../node_modules/modern-palette/dist/index.mjs","../../node_modules/modern-gif/dist/index.mjs","../../src/gif.js","../../src/save.js","../../src/glitch.js","../../src/main.js"],"sourcesContent":["export default /* glsl */ `#version 300 es\nprecision highp float;\nout vec4 fragColor;\n\nuniform vec3 iResolution;\nuniform float iTime;\nuniform float iFrame;\nuniform float timeScale;\nuniform float hueShift;\nuniform float saturation;\nuniform float lightness;\n\n#define POINTS 32\n#define PI 3.1415926536\n#define TAU (2.0 * PI)\n#define S(a,b,t) smoothstep(a,b,t)\n\nmat2 rot(float a) {\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\n// HSV to RGB conversion\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n// RGB to HSV conversion\nvec3 rgb2hsv(vec3 c) {\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\n// Apply hue shift to RGB color\nvec3 applyHueShift(vec3 color, float shift) {\n    vec3 hsv = rgb2hsv(color);\n    hsv.x = fract(hsv.x + shift); // Rotate hue by shift amount (0-1 range)\n    return hsv2rgb(hsv);\n}\n\n// Apply saturation adjustment to RGB color\nvec3 applySaturation(vec3 color, float satFactor) {\n    vec3 hsv = rgb2hsv(color);\n    hsv.y = clamp(hsv.y * satFactor, 0.0, 1.0); // Adjust saturation\n    return hsv2rgb(hsv);\n}\n\n// Add dithering function\nfloat dither(vec2 uv) {\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\n// Apply lightness adjustment to RGB color\nvec3 applyLightness(vec3 color, float lightFactor) {\n    // Convert to grayscale for more dramatic effect\n    float gray = dot(color, vec3(0.299, 0.587, 0.114));\n\n    // Shift the curve to make 0 match previous 1\n    float shiftedFactor = (lightFactor * 14.0 + 1.0) / 15.0;\n    float curve = shiftedFactor * shiftedFactor * 0.9;\n\n    // Mix between original color and white/black based on lightness\n    vec3 result;\n    if (lightFactor > 0.5) {\n        // Mix with white for lighter values, but cap at 0.95\n        float mixAmount = min((curve - 0.5) * 2.0, 0.95);\n        result = mix(color, vec3(1.0), mixAmount);\n    } else {\n        // Mix with black for darker values, but cap at 0.95\n        float mixAmount = min(curve * 2.0, 0.95);\n        result = mix(vec3(0.1), color, mixAmount);\n    }\n\n    // Add dithering to break up color bands\n    float ditherAmount = (1.0 - lightFactor) * 0.02; // More dither in darker areas\n    vec2 uv = gl_FragCoord.xy / iResolution.xy;\n    float noise = dither(uv) * ditherAmount;\n    result += vec3(noise);\n\n    return result;\n}\n\nvec2 hash(vec2 p) {\n    p = vec2(dot(p, vec2(2127.1, 81.17)), dot(p, vec2(1269.5, 283.37)));\n    return fract(sin(p)*43758.5453);\n}\n\nfloat noise(in vec2 p) {\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    vec2 u = f*f*(3.0-2.0*f);\n    float n = mix(mix(dot(-1.0+2.0*hash(i + vec2(0.0, 0.0)), f - vec2(0.0, 0.0)),\n    dot(-1.0+2.0*hash(i + vec2(1.0, 0.0)), f - vec2(1.0, 0.0)), u.x),\n    mix(dot(-1.0+2.0*hash(i + vec2(0.0, 1.0)), f - vec2(0.0, 1.0)),\n    dot(-1.0+2.0*hash(i + vec2(1.0, 1.0)), f - vec2(1.0, 1.0)), u.x), u.y);\n    return 0.5 + 0.5*n;\n}\n`\n","export default /* glsl */ `\nvec4 shader(vec2 fragCoord) {\n  vec2 uv = fragCoord / iResolution.xy;\n  float aspectRatio = iResolution.x / iResolution.y;\n  vec2 tuv = uv - .5;\n  float t = iTime * timeScale;  // Use timeScale for dynamic speed\n  float degree = noise(vec2(t * 0.1, tuv.x*tuv.y));  // Slow rotation\n  tuv.y *= 1./aspectRatio;\n  tuv *= rot(radians((degree-.5)*720.+180.));\n  tuv.y *= aspectRatio;\n  float frequency = 5.;\n  float amplitude = 30.;\n  float speed = t * 2.0;  // Use timeScale for speed\n  tuv.x += sin(tuv.y*frequency+speed)/amplitude;\n  tuv.y += sin(tuv.x*frequency*1.5+speed)/(amplitude*.5);\n  vec3 amberYellow = vec3(299, 186, 137) / vec3(255);\n  vec3 deepBlue = vec3(49, 98, 238) / vec3(255);\n  vec3 pink = vec3(246, 146, 146) / vec3(255);\n  vec3 blue = vec3(89, 181, 243) / vec3(255);\n  vec3 purpleHaze = vec3(105, 49, 245) / vec3(255);\n  vec3 swampyBlack = vec3(32, 42, 50) / vec3(255);\n  vec3 persimmonOrange = vec3(233, 51, 52) / vec3(255);\n  vec3 darkAmber = vec3(233, 160, 75) / vec3(255);\n  float cycle = sin(t * 0.5);  // Slower color cycling\n  float mixT = (sign(cycle) * pow(abs(cycle), 0.6) + 1.) / 2.;\n  vec3 color1 = mix(amberYellow, purpleHaze, mixT);\n  vec3 color2 = mix(deepBlue, swampyBlack, mixT);\n  vec3 color3 = mix(pink, persimmonOrange, mixT);\n  vec3 color4 = mix(blue, darkAmber, mixT);\n  vec3 layer1 = mix(color3, color2, smoothstep(-.3, .2, (tuv*rot(radians(-5.))).x));\n  vec3 layer2 = mix(color4, color1, smoothstep(-.3, .2, (tuv*rot(radians(-5.))).x));\n  vec3 color = mix(layer1, layer2, smoothstep(.5, -.3, tuv.y));\n\n  // Apply hue shift to the final color\n  color = applyHueShift(color, hueShift);\n\n  // Apply saturation adjustment\n  color = applySaturation(color, saturation);\n\n  // Apply lightness adjustment\n  color = applyLightness(color, lightness);\n\n  return vec4(color, 1.0);\n}\n`\n","export default /* glsl */ `\nvec3 hash3d(vec3 p) {\n  p = vec3(dot(p, vec3(127.1, 311.7, 74.7)), dot(p, vec3(269.5, 183.3, 246.1)),\n          dot(p, vec3(113.5, 271.9, 124.6)));\n  p = -1.0 + 2.0 * fract(sin(p) * 43758.5453123);\n  return p;\n}\n\nfloat noise3d(in vec3 p) {\n  vec3 i = floor(p);\n  vec3 f = fract(p);\n  vec3 u = f * f * (3.0 - 2.0 * f);\n  return mix(\n      mix(mix(dot(hash3d(i + vec3(0.0, 0.0, 0.0)), f - vec3(0.0, 0.0, 0.0)),\n              dot(hash3d(i + vec3(1.0, 0.0, 0.0)), f - vec3(1.0, 0.0, 0.0)),\n              u.x),\n          mix(dot(hash3d(i + vec3(0.0, 1.0, 0.0)), f - vec3(0.0, 1.0, 0.0)),\n              dot(hash3d(i + vec3(1.0, 1.0, 0.0)), f - vec3(1.0, 1.0, 0.0)),\n              u.x),\n          u.y),\n      mix(mix(dot(hash3d(i + vec3(0.0, 0.0, 1.0)), f - vec3(0.0, 0.0, 1.0)),\n              dot(hash3d(i + vec3(1.0, 0.0, 1.0)), f - vec3(1.0, 0.0, 1.0)),\n              u.x),\n          mix(dot(hash3d(i + vec3(0.0, 1.0, 1.0)), f - vec3(0.0, 1.0, 1.0)),\n              dot(hash3d(i + vec3(1.0, 1.0, 1.0)), f - vec3(1.0, 1.0, 1.0)),\n              u.x),\n          u.y),\n      u.z);\n}\n\nvec4 shader(vec2 fragCoord) {\n  const int layers = 5;\n  const float baseSpeed = 0.25; // Base speed\n  const float scale = 1.2;\n\n  vec2 uv = (fragCoord - iResolution.xy - .5) / iResolution.y;\n  float t = iTime * baseSpeed * timeScale; // Use timeScale for dynamic speed\n  uv *= scale;\n  float h =\n      noise3d(vec3(uv * 2., t)); // Time as z-coordinate for continuous noise\n  for (int n = 1; n < layers; n++) {\n    float i = float(n);\n    uv -= vec2(0.7 / i * sin(i * uv.y + i + t * 2.0 + h * i) +\n                  0.8, // Reduced from 5.0 to 2.0\n              0.4 / i * sin(uv.x + 4. - i + h + t * 2.0 + 0.3 * i) +\n                  1.6); // Reduced from 5.0 to 2.0\n  }\n  uv -=\n      vec2(1.2 * sin(uv.x + t + h) + 1.8, 0.4 * sin(uv.y + t + 0.3 * h) + 1.6);\n  vec3 col = vec3(.5 * sin(uv.x) + 0.5, .5 * sin(uv.x + uv.y) + 0.5,\n                  .5 * sin(uv.y) + 0.8) *\n            0.8;\n\n  // Apply hue shift to the final color\n  col = applyHueShift(col, hueShift);\n\n  // Apply saturation adjustment\n  col = applySaturation(col, saturation);\n\n  // Apply lightness adjustment\n  col = applyLightness(col, lightness);\n\n  return vec4(col, 1.0);\n}\n`\n","export default /* glsl */ `\nvec4 shader(vec2 fragCoord) {\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  vec2 p[4];\n  p[0] = vec2(0.1, 0.9);\n  p[1] = vec2(0.9, 0.9);\n  p[2] = vec2(0.5, 0.1);\n  float t = iTime * timeScale;  // Use timeScale for dynamic speed\n  p[3] = vec2(cos(t), sin(t)) * 0.4 + vec2(0.5, 0.5);\n  vec3 c[4];\n  // Add subtle color animation\n  float colorShift = sin(t * 0.2) * 0.1;  // Slow color cycling\n  c[0] = vec3(0.996078431372549 + colorShift, 0.3411764705882353, 0.33725490196078434);\n  c[1] = vec3(0.996078431372549, 0.6352941176470588 + colorShift, 0.1607843137254902);\n  c[2] = vec3(0.1450980392156863, 0.8196078431372549, 0.8588235294117647 + colorShift);\n  c[3] = vec3(1.0, 1.0, 0.0);\n  float blend = 2.0;\n  vec3 sum = vec3(0.0);\n  float valence = 0.0;\n  for (int i = 0; i < 4; i++) {\n      float distance = length(uv - p[i]);\n      if (distance == 0.0) { distance = 1.0; }\n      float w =  1.0 / pow(distance, blend);\n      sum += w * c[i];\n      valence += w;\n  }\n  sum /= valence;\n  sum = pow(sum, vec3(1.0/2.2));\n\n  // Apply hue shift to the final color\n  sum = applyHueShift(sum, hueShift);\n\n  // Apply saturation adjustment\n  sum = applySaturation(sum, saturation);\n\n  // Apply lightness adjustment\n  sum = applyLightness(sum, lightness);\n\n  return vec4(sum.xyz, 1.0);\n}\n`\n","export default /* glsl */ `\nvec4 shader(vec2 fragCoord) {\n  vec2 uv = fragCoord/iResolution.xy;\n  float ratio = iResolution.x / iResolution.y;\n  vec2 tuv = uv;\n  tuv -= .5;\n  float t = iTime * timeScale;\n  float degree = noise(vec2(t * 0.1, tuv.x*tuv.y));\n  tuv.y *= 1./ratio;\n  tuv *= rot(radians((degree-.5)*720.+180.));\n  tuv.y *= ratio;\n  float frequency = 5.;\n  float amplitude = 30.;\n  float speed = t * 1.0;\n  tuv.x += sin(tuv.y*frequency+speed)/amplitude;\n  tuv.y += sin(tuv.x*frequency*1.5+speed)/(amplitude*.5);\n  vec3 colorYellow = vec3(.957, .804, .623);\n  vec3 colorDeepBlue = vec3(.192, .384, .933);\n  vec3 layer1 = mix(colorYellow, colorDeepBlue, S(-.3, .2, (tuv*rot(radians(-5.))).x));\n  vec3 colorRed = vec3(.910, .510, .8);\n  vec3 colorBlue = vec3(0.350, .71, .953);\n  vec3 layer2 = mix(colorRed, colorBlue, S(-.3, .2, (tuv*rot(radians(-5.))).x));\n  vec3 finalComp = mix(layer1, layer2, S(.5, -.3, tuv.y));\n\n  // Apply color adjustments\n  finalComp = applyHueShift(finalComp, hueShift);\n  finalComp = applySaturation(finalComp, saturation);\n  finalComp = applyLightness(finalComp, lightness);\n\n  return vec4(finalComp, 1.0);\n}\n`\n","export default /* glsl */ `\nvec4 shader(vec2 fragCoord) {\n  vec2 uv = (fragCoord/iResolution.xy)*1.;\n  uv.y -= 1.5;\n  uv.x += .2;\n  float t = iTime * timeScale;  // Use timeScale uniform\n  vec2 p = uv;\n  float t1 = t * 1.5;  // Reduced from 3.0 to 1.5\n  float t2 = t * 0.5;  // Reduced from 1.0 to 0.5\n  p.y *= (p.x*p.y) * sin(p.y*p.x + t1);  // Reduced frequency from 2. to 1.\n  float d = length(p*.7);\n  vec3 c0 = vec3(1.);\n  vec3 c1 = vec3(.365, .794, .935);\n  vec3 c2 = vec3(.973, .671, .961);\n  vec3 c3 = vec3(.973, .843, .439);\n  float offset = 1.2;\n  float step1 = .05*offset + sin(t2*2.)*.1;  // Reduced from 3. to 2.\n  float step2 = 0.3*offset + sin(t2)*.15;\n  float step3 = 0.6*offset + sin(t2)*.1;\n  float step4 = 1.2*offset + sin(t2*2.)*.2;  // Reduced from 3. to 2.\n  vec3 col = mix(c0, c1, smoothstep(step1, step2, d));\n  col = mix(col, c2, smoothstep(step2, step3, d));\n  col = mix(col, c3, smoothstep(step3, step4, d));\n\n  // Apply color adjustments\n  col = applyHueShift(col, hueShift);\n  col = applySaturation(col, saturation);\n  col = applyLightness(col, lightness);\n\n  return vec4(col, .5);\n}\n`\n","export default /* glsl */ `\nvec4 shader(vec2 fragCoord) {\n  vec2 uv = fragCoord/iResolution.xy;\n  float ratio = iResolution.x / iResolution.y;\n  vec2 tuv = uv;\n  tuv -= .5;\n  float t = iTime * timeScale;\n  float degree = noise(vec2(t * 0.1, tuv.x*tuv.y));\n  tuv.y *= 1./ratio;\n  tuv *= rot(radians((degree-.5)*720.+75.));\n  tuv.y *= ratio;\n  float frequency = 2.;\n  float amplitude = 30.;\n  float speed = t * 1.0;\n  tuv.x += sin(tuv.y*frequency+speed)/amplitude;\n  tuv.y += sin(tuv.x*frequency*1.5+speed)/(amplitude*.5);\n  vec3 colorWhite = vec3(1.0, 1.0, 1.0);\n  vec3 colorRed = vec3(.914, .345, .62);\n  vec3 colorPurple = vec3(.792, .573, .871);\n  vec3 colorGreen = vec3(.612, .91, .364);\n  vec3 colorBlue = vec3(.42, .773, .937);\n  vec3 colorYellow = vec3(1.0, .973, .325);\n  vec3 layer1 = mix(colorRed, colorYellow, S(-.6, .2, (tuv*rot(radians(-5.))).x));\n  layer1 = mix(layer1, colorWhite, S(-.6, .2, (tuv*rot(radians(-5.))).x));\n  layer1 = mix(layer1, colorPurple, S(-.2, .6, (tuv*rot(radians(-5.))).x));\n  vec3 layer2 = mix(colorRed, colorYellow, S(-.8, .2, (tuv*rot(radians(-5.))).x));\n  layer2 = mix(layer2, colorGreen, S(-.1, .9, (tuv*rot(radians(-5.))).x));\n  layer2 = mix(layer2, colorBlue, S(-.5, .5, (tuv*rot(radians(-5.))).x));\n  vec3 finalComp = mix(layer1, layer2, S(.7, -.5, tuv.y));\n\n  // Apply color adjustments\n  finalComp = applyHueShift(finalComp, hueShift);\n  finalComp = applySaturation(finalComp, saturation);\n  finalComp = applyLightness(finalComp, lightness);\n\n  return vec4(finalComp, 1.0);\n}\n`\n","export default /* glsl */ `\nvec4 shader(vec2 fragCoord) {\n  vec2 uv = fragCoord/iResolution.xy;\n  float t = iTime * timeScale;\n\n  // Create smooth rotation based on noise\n  float degree = noise(vec2(t * 0.1, uv.x*uv.y));\n  vec2 tuv = uv * 2.0 - 1.0;\n  tuv *= 1.5;\n  tuv *= rot(radians((degree-.5)*720.+180.));\n\n  // Add wave distortion with adjusted scaling\n  float frequency = 3.0;\n  float amplitude = 40.0;\n  float speed = t * 0.8;\n  tuv.x += sin(tuv.y*frequency+speed)/amplitude;\n  tuv.y += sin(tuv.x*frequency*1.5+speed)/(amplitude*.5);\n\n  // Define a rich color palette\n  vec3 color1 = vec3(0.957, 0.804, 0.623);\n  vec3 color2 = vec3(0.192, 0.384, 0.933);\n  vec3 color3 = vec3(0.910, 0.510, 0.800);\n  vec3 color4 = vec3(0.350, 0.710, 0.953);\n\n  // Create layered gradients with smooth transitions\n  vec3 layer1 = mix(color1, color2, S(-.3, .2, (tuv*rot(radians(-5.))).x));\n  vec3 layer2 = mix(color3, color4, S(-.3, .2, (tuv*rot(radians(-5.))).x));\n\n  // Blend layers with smooth vertical transition\n  vec3 finalColor = mix(layer1, layer2, S(.5, -.3, tuv.y));\n\n  // Add subtle color variation based on time\n  float colorShift = sin(t * 0.3) * 0.1;\n  finalColor = mix(finalColor, finalColor.yzx, colorShift);\n\n  // Add subtle vignette with wider coverage\n  float vignette = smoothstep(1.0, 0.0, length(uv - 0.5));\n  finalColor *= vignette;\n\n  // Apply color adjustments\n  finalColor = applyHueShift(finalColor, hueShift);\n  finalColor = applySaturation(finalColor, saturation);\n  finalColor = applyLightness(finalColor, lightness);\n\n  return vec4(finalColor, 1.0);\n}\n`\n","export default /* glsl */ `\nvec4 shader(vec2 fragCoord) {\n  vec2 uv = fragCoord / iResolution.xy;\n  float aspectRatio = iResolution.x / iResolution.y;\n  float t = iTime * timeScale;\n\n  // Create fluid-like movement with aspect ratio correction\n  vec2 p = uv * 2.0 - 1.0;\n  p.x *= aspectRatio;\n  p *= 0.5; // Reduced scale for larger blobs\n\n  // Add some noise-based distortion with lower frequency\n  float noise1 = noise(p + t * 0.05); // Reduced time factor\n  float noise2 = noise(p * 0.5 - t * 0.1); // Reduced scale and time factor\n\n  // Create gradient with noise influence\n  vec3 color = vec3(\n    noise1 * 0.5 + 0.5,\n    noise2 * 0.5 + 0.5,\n    (noise1 + noise2) * 0.5\n  );\n\n  // Apply color adjustments\n  color = applyHueShift(color, hueShift);\n  color = applySaturation(color, saturation);\n  color = applyLightness(color, lightness);\n\n  return vec4(color, 1.0);\n}\n`\n","export default /* glsl */ `\nvec4 shader(vec2 fragCoord) {\n  vec2 uv = fragCoord / iResolution.xy;\n  float aspectRatio = iResolution.x / iResolution.y;\n  float t = iTime * timeScale;\n\n  // Create multiple layers of fluid movement with aspect ratio correction\n  vec2 p1 = uv * 1.0;\n  p1.x *= aspectRatio;\n  vec2 p2 = uv * 1.5;\n  p2.x *= aspectRatio;\n\n  // Generate noise at different scales with lower frequency\n  float noise1 = noise(p1 + t * 0.05);\n  float noise2 = noise(p2 - t * 0.08);\n  float noise3 = noise(p1 * 0.5 + t * 0.1);\n\n  // Combine noise layers\n  float combinedNoise = (noise1 + noise2 + noise3) / 3.0;\n\n  // Create color based on noise\n  vec3 color = vec3(\n    noise1 * 0.7 + 0.3,\n    noise2 * 0.7 + 0.3,\n    combinedNoise * 0.7 + 0.3\n  );\n\n  // Add some rotation-based variation\n  vec2 rotatedUV = uv * rot(t * 0.05);\n  rotatedUV.x *= aspectRatio;\n  float rotationNoise = noise(rotatedUV * 0.5);\n  color = mix(color, color.yzx, rotationNoise * 0.3);\n\n  // Apply color adjustments\n  color = applyHueShift(color, hueShift);\n  color = applySaturation(color, saturation);\n  color = applyLightness(color, lightness);\n\n  return vec4(color, 1.0);\n}\n`\n","export default /* glsl */ `\nvec4 shader(vec2 fragCoord) {\n  vec2 uv = fragCoord / iResolution.xy;\n  float aspectRatio = iResolution.x / iResolution.y;\n  float t = iTime * timeScale;\n\n  // Create abstract fluid movement with aspect ratio correction\n  vec2 p = uv * 1.0;\n  p.x *= aspectRatio;\n  p = p * rot(t * 0.02);\n\n  // Generate multiple noise layers with lower frequency\n  float noise1 = noise(p + t * 0.05);\n  float noise2 = noise(p * 0.5 - t * 0.08);\n  float noise3 = noise(p * 0.25 + t * 0.1);\n\n  // Create color channels with different noise combinations\n  vec3 color = vec3(\n    noise1 * noise2,\n    noise2 * noise3,\n    noise3 * noise1\n  );\n\n  // Add some movement-based variation\n  vec2 movement = vec2(sin(t * 0.1), cos(t * 0.15)) * 0.2;\n  movement.x *= aspectRatio;\n  float movementNoise = noise(uv + movement);\n  color = mix(color, color.zxy, movementNoise);\n\n  // Apply color adjustments\n  color = applyHueShift(color, hueShift);\n  color = applySaturation(color, saturation);\n  color = applyLightness(color, lightness);\n\n  return vec4(color, 1.0);\n}\n`\n","export default /* glsl */ `\nvec3 irri(float hue) {\n    return 0.5 + 0.5 * cos((9.0 * hue) + vec3(0.0, 23.0, 21.0));\n}\n\nvec2 line(vec2 p, vec2 a, vec2 b) {\n    vec2 ba = b - a;\n    vec2 pa = p - a;\n    float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    return vec2(length(pa - h * ba), h);\n}\n\nvec4 shader(vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float aspectRatio = iResolution.x / iResolution.y;\n    float t = iTime * timeScale;\n\n    // Create noise-based gradient with aspect ratio correction\n    vec2 p = uv * 0.5;\n    p.x *= aspectRatio;\n    float noise1 = noise(p + t * 0.05);\n    float noise2 = noise(p * 0.5 - t * 0.08);\n\n    // Create gradient with noise influence\n    vec3 color = vec3(\n        noise1 * 0.8 + 0.2,\n        noise2 * 0.8 + 0.2,\n        (noise1 + noise2) * 0.4 + 0.3\n    );\n\n    // Add some rotation-based variation\n    vec2 rotatedUV = uv * rot(t * 0.02);\n    rotatedUV.x *= aspectRatio;\n    float rotationNoise = noise(rotatedUV * 0.5);\n    color = mix(color, color.yzx, rotationNoise * 0.2);\n\n    // Apply color adjustments\n    color = applyHueShift(color, hueShift);\n    color = applySaturation(color, saturation);\n    color = applyLightness(color, lightness);\n\n    return vec4(color, 1.0);\n}\n`\n","export default /* glsl */ `\nvec4 shader(vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float aspectRatio = iResolution.x / iResolution.y;\n    float t = iTime * timeScale;\n\n    // Create complex noise pattern with aspect ratio correction\n    vec2 p1 = uv * 0.5;\n    p1.x *= aspectRatio;\n    vec2 p2 = uv * 0.75;\n    p2.x *= aspectRatio;\n\n    // Generate multiple noise layers with lower frequency\n    float noise1 = noise(p1 + t * 0.05);\n    float noise2 = noise(p2 - t * 0.08);\n    float noise3 = noise(p1 * 0.25 + t * 0.1);\n\n    // Combine noise layers with different weights\n    float combinedNoise = (noise1 * 0.4 + noise2 * 0.3 + noise3 * 0.3);\n\n    // Create color with noise influence\n    vec3 color = vec3(\n        noise1 * 0.6 + 0.4,\n        noise2 * 0.6 + 0.4,\n        combinedNoise * 0.6 + 0.4\n    );\n\n    // Add some movement-based variation\n    vec2 movement = vec2(sin(t * 0.1), cos(t * 0.15)) * 0.2;\n    movement.x *= aspectRatio;\n    float movementNoise = noise(uv + movement);\n    color = mix(color, color.zxy, movementNoise * 0.3);\n\n    // Apply color adjustments\n    color = applyHueShift(color, hueShift);\n    color = applySaturation(color, saturation);\n    color = applyLightness(color, lightness);\n\n    return vec4(color, 1.0);\n}\n`\n","import a1 from './a1.glsl.js'\nimport a2 from './a2.glsl.js'\nimport b1 from './b1.glsl.js'\nimport b2 from './b2.glsl.js'\nimport b3 from './b3.glsl.js'\nimport b4 from './b4.glsl.js'\nimport b5 from './b5.glsl.js'\nimport f1 from './f1.glsl.js'\nimport f2 from './f2.glsl.js'\nimport f3 from './f3.glsl.js'\nimport n1 from './n1.glsl.js'\nimport n2 from './n2.glsl.js'\n\nexport const shaders = {\n  a1, a2, b1, b2, b3, b4, b5, f1, f2, f3, n1, n2\n}\n\nexport default Object.keys(shaders)\n","// -----------------------------------------------------------------------------\n\nconst createCanvas = (selector = 'body') => {\n  const target = document.querySelector(selector) ?? document.body\n  return target.tagName === 'CANVAS'\n    ? target\n    : target.appendChild(\n        Object.assign(document.createElement('canvas'), {\n          id: 'gradient-gl',\n          style: 'position:fixed;inset:0;width:100%;height:100%;z-index:-1;',\n        }),\n      )\n}\n\n// -----------------------------------------------------------------------------\n\n// Pure utility functions\nconst normalize = (v) => {\n  const value = Number.parseInt(v, 16)\n  return Math.round(value * (255 / 15)) // Map 0-15 to 0-255\n}\nconst nonLinearMap = (val, minOut, maxOut, power = 2) => {\n  const v = Math.max(0, Math.min(val, 15))\n  return v === 0 ? minOut : minOut + ((v - 1) / 14) ** power * (maxOut - minOut)\n}\n\nconst parseSeed = (s) => [\n  s.split('.').shift(),\n  new Uint8Array(s.split('.').pop().split('').map(normalize)),\n]\n\n// -----------------------------------------------------------------------------\n\nconst vertex = /* glsl */ `#version 300 es\n      in vec2 position;\n      void main() {\n          gl_Position = vec4(position, 0.0, 1.0);\n      }`\n\nclass GradientGL {\n  #gl\n  #canvas\n  #program\n  #uniforms\n  #timeScale\n  #isActive\n  #externalUniforms\n  #currentSeed\n  #currentUniformValues\n  #fragment\n  #vertex\n\n  constructor(canvas, fragment, seed) {\n    this.#canvas = canvas\n    this.#fragment = fragment\n    this.#vertex = vertex\n    this.#timeScale = 0.4\n    this.#isActive = false\n    this.#currentSeed = seed\n    this.#externalUniforms = seed[1]\n    this.#currentUniformValues = { speed: 0, hueShift: 0, saturation: 0, lightness: 0 }\n\n    this.#setupEventHandlers()\n  }\n\n  #setupEventHandlers() {\n    this.#canvas.addEventListener('webglcontextlost', (e) => {\n      e.preventDefault()\n      this.#isActive = false\n      this.#gl = null\n      this.#program = null\n      this.#uniforms = null\n      this.#canvas.width = 0\n    })\n\n    this.#canvas.addEventListener('webglcontextrestored', () => {\n      this.init()\n    })\n\n    // document.addEventListener('visibilitychange', () => {\n    //   if (!document.hidden && !this.#isActive) this.init()\n    // })\n  }\n\n  init() {\n    this.#gl = this.#createGLContext(this.#canvas)\n    this.#program = this.#createProgram(this.#vertex, this.#fragment)\n    this.#uniforms = this.#getUniformLocations()\n    this.#isActive = true\n\n    this.#setupBuffers()\n    this.#setupAttributes()\n    this.#updateExternalUniforms(true)\n    this.#render()\n  }\n\n  #createGLContext(canvas) {\n    const gl = canvas.getContext('webgl2', {\n      antialias: true,\n    })\n    if (!gl) throw new Error('WebGL2 not supported')\n    return gl\n  }\n\n  #createShader(type, source) {\n    const shader = this.#gl.createShader(type)\n    this.#gl.shaderSource(shader, source)\n    this.#gl.compileShader(shader)\n\n    const log = this.#gl.getShaderInfoLog(shader)\n    if (log)\n      throw new Error(\n        `${type === this.#gl.VERTEX_SHADER ? 'Vertex' : 'Fragment'} shader compilation error: ${log}`,\n      )\n\n    return shader\n  }\n\n  #createProgram(vertexSource, fragmentSource) {\n    const program = this.#gl.createProgram()\n    const vertexShader = this.#createShader(this.#gl.VERTEX_SHADER, vertexSource)\n    const fragmentShader = this.#createShader(this.#gl.FRAGMENT_SHADER, fragmentSource)\n\n    this.#gl.attachShader(program, vertexShader)\n    this.#gl.attachShader(program, fragmentShader)\n    this.#gl.linkProgram(program)\n\n    const log = this.#gl.getProgramInfoLog(program)\n    if (log) console.error('Program linking error:', log)\n\n    this.#gl.detachShader(program, vertexShader)\n    this.#gl.detachShader(program, fragmentShader)\n    this.#gl.deleteShader(vertexShader)\n    this.#gl.deleteShader(fragmentShader)\n\n    this.#gl.useProgram(program)\n    return program\n  }\n\n  #setupBuffers() {\n    const positionBuffer = this.#gl.createBuffer()\n    this.#gl.bindBuffer(this.#gl.ARRAY_BUFFER, positionBuffer)\n    this.#gl.bufferData(\n      this.#gl.ARRAY_BUFFER,\n      new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]),\n      this.#gl.STATIC_DRAW,\n    )\n  }\n\n  #setupAttributes() {\n    const positionLocation = this.#gl.getAttribLocation(this.#program, 'position')\n    this.#gl.enableVertexAttribArray(positionLocation)\n    this.#gl.vertexAttribPointer(positionLocation, 2, this.#gl.FLOAT, false, 0, 0)\n  }\n\n  #getUniformLocations() {\n    return {\n      iResolution: this.#gl.getUniformLocation(this.#program, 'iResolution'),\n      iTime: this.#gl.getUniformLocation(this.#program, 'iTime'),\n      iFrame: this.#gl.getUniformLocation(this.#program, 'iFrame'),\n      options: this.#gl.getUniformLocation(this.#program, 'options'),\n      timeScale: this.#gl.getUniformLocation(this.#program, 'timeScale'),\n      hueShift: this.#gl.getUniformLocation(this.#program, 'hueShift'),\n      saturation: this.#gl.getUniformLocation(this.#program, 'saturation'),\n      lightness: this.#gl.getUniformLocation(this.#program, 'lightness'),\n    }\n  }\n\n  #updateExternalUniforms(forceUpdate = false) {\n    if (!this.#externalUniforms) return\n    this.#gl.useProgram(this.#program)\n    this.#gl.uniform1iv(this.#uniforms.options, this.#externalUniforms)\n\n    const [speedVal, hueVal, satVal, lightVal] = this.#externalUniforms.map((v) =>\n      Math.round((v * 15) / 255),\n    )\n    const [speed, hueShift, satFactor, lightFactor] = [\n      nonLinearMap(speedVal, 0.1, 3.0, 1.5),\n      hueVal / 15,\n      nonLinearMap(satVal, 0.3, 3.0, 1.5),\n      lightVal / 15, // Simple linear mapping from 0 to 1\n    ]\n\n    const valuesChanged =\n      forceUpdate ||\n      speed !== this.#currentUniformValues.speed ||\n      hueShift !== this.#currentUniformValues.hueShift ||\n      satFactor !== this.#currentUniformValues.saturation ||\n      lightFactor !== this.#currentUniformValues.lightness\n\n    if (valuesChanged) {\n      this.#gl.uniform1f(this.#uniforms.timeScale, speed)\n      this.#gl.uniform1f(this.#uniforms.hueShift, hueShift)\n      this.#gl.uniform1f(this.#uniforms.saturation, satFactor)\n      this.#gl.uniform1f(this.#uniforms.lightness, lightFactor)\n\n      this.#currentUniformValues = {\n        speed,\n        hueShift,\n        saturation: satFactor,\n        lightness: lightFactor,\n      }\n    }\n  }\n\n  updateSeed(seed) {\n    if (seed[0] === this.#currentSeed[0] && seed[1].every((v, i) => v === this.#currentSeed[1][i]))\n      return false\n    this.#currentSeed = seed\n    this.#externalUniforms = seed[1]\n    this.#updateExternalUniforms(true)\n    return true\n  }\n\n  #updateInternalUniforms(time) {\n    if (!this.#isActive || !this.#canvas || !this.#gl) return\n\n    const { iResolution, iTime, iFrame } = this.#uniforms\n    this.#gl.useProgram(this.#program)\n\n    const displayWidth = this.#canvas.clientWidth\n    const displayHeight = this.#canvas.clientHeight\n    if (this.#canvas.width !== displayWidth || this.#canvas.height !== displayHeight) {\n      this.#canvas.width = displayWidth\n      this.#canvas.height = displayHeight\n      this.#gl.uniform3f(iResolution, this.#canvas.width, this.#canvas.height, 1.0)\n      this.#gl.viewport(0, 0, this.#canvas.width, this.#canvas.height)\n    }\n\n    this.#gl.uniform1f(iTime, time / 1000)\n    this.#gl.uniform1f(iFrame, Math.floor((time / 1000) * 60))\n  }\n\n  #render() {\n    const frame = () => {\n      if (!this.#isActive || !this.#canvas || !this.#gl) {\n        console.log(' NOPE ')\n        return\n      }\n      this.#updateInternalUniforms(performance.now())\n      this.#gl.drawArrays(this.#gl.TRIANGLE_STRIP, 0, 4)\n      requestAnimationFrame(frame)\n    }\n    frame()\n  }\n\n  destroy() {\n    this.#isActive = false\n    if (this.#program && this.#gl) {\n      this.#gl.deleteProgram(this.#program)\n    }\n    if (this.#canvas) {\n      try {\n        this.#canvas.remove()\n      } catch (e) {}\n    }\n    this.#program = null\n    this.#canvas = null\n    this.#gl = null\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nimport common from './shaders/common.glsl.js'\nimport { shaders } from './shaders/index.js'\n\nconst fetchCommon = () => Promise.resolve(common)\nconst fetchShader = (shader) => Promise.resolve(shaders[shader])\n\nconst main = /* glsl */ `\n  void main() {\n    fragColor = shader(gl_FragCoord.xy);\n  }\n  `\n\nlet activeProgram = null\n\nexport default async (seed, selector = 'body') => {\n  if (!seed) throw new Error('Seed is required')\n\n  const parsedSeed = parseSeed(seed)\n  const [shaderId] = parsedSeed\n\n  if (activeProgram?.shaderId === shaderId) {\n    activeProgram.updateSeed(parsedSeed)\n    return activeProgram\n  }\n\n  if (activeProgram) {\n    activeProgram.destroy()\n    activeProgram = null\n  }\n\n  const [common, shader] = await Promise.all([fetchCommon(), fetchShader(shaderId)])\n  const fragment = common + shader + main\n  const canvas = createCanvas(selector)\n  const program = new GradientGL(canvas, fragment, parsedSeed)\n  program.shaderId = shaderId\n  program.init()\n  activeProgram = program\n\n  return program\n}\n\n// -----------------------------------------------------------------------------\n","export const getSVGDimensions = svg => ({\n    width: svg.getAttribute('viewBox')?.split(' ')[2] || svg.width.baseVal.value,\n    height: svg.getAttribute('viewBox')?.split(' ')[3] || svg.height.baseVal.value\n})\n\nexport const createCanvas = ({width, height}) => {\n    width = Math.floor(width / 2) * 2\n    height = Math.floor(height / 2) * 2\n    return Object.assign(document.createElement('canvas'), {width, height})\n}\n\nexport const updateAnimationState = (svg, time) => {\n    const svgCopy = svg.cloneNode(true)\n    for (const anim of svgCopy.querySelectorAll('animate')) {\n        const values = anim.getAttribute('values')?.split(';') || []\n        if (!values.length) continue\n        const targetValue = values[Math.floor(time * (values.length - 1))]\n        anim.setAttribute('values', targetValue)\n        anim.setAttribute('keyTimes', '0')\n    }\n    return svgCopy\n}\n\nexport const svgToImage = (svg, width = 1, height = 1) => new Promise((resolve, reject) => {\n    const blob = new Blob([new XMLSerializer().serializeToString(svg)], {type: 'image/svg+xml'})\n    const url = URL.createObjectURL(blob)\n    const img = new Image()\n    img.onload = () => {\n        URL.revokeObjectURL(url)\n        resolve(img)\n    }\n    img.onerror = () => {\n        URL.revokeObjectURL(url)\n        const fallback = document.createElement('canvas')\n        fallback.width = width\n        fallback.height = height\n        resolve(fallback)\n    }\n    img.src = url\n})\n\nexport const captureState = async (svg, time) => {\n    const svgCopy = updateAnimationState(svg, time)\n    const { width, height } = getSVGDimensions(svg)\n    const canvas = createCanvas({ width, height })\n    const ctx = canvas.getContext('2d', { alpha: true, willReadFrequently: true })\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    ctx.fillStyle = '#000'\n    ctx.fillRect(0, 0, canvas.width, canvas.height)\n    const img = await svgToImage(svgCopy, canvas.width, canvas.height)\n    if (!(img instanceof HTMLImageElement || img instanceof HTMLCanvasElement || (window.ImageBitmap && img instanceof ImageBitmap))) {\n      return canvas\n    }\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height)\n    return canvas\n} ","import { captureState } from './svgcap.js'\n\nconst CONFIG = {\n    fps: 30,\n    duration: 10,\n    quality: 2_000_000,\n    codec: 'video/webm;codecs=vp9',\n    options: {\n        maxBitrate: 2_400_000,\n        minBitrate: 1_200_000,\n        maxQuantizer: 56,\n        minQuantizer: 20\n    }\n}\n\nconst log = (msg, ...args) => {\n    const time = (performance.now() / 1000).toFixed(1)\n    console.log(`[WebM ${time}s]`, msg, ...args)\n}\n\nconst initRecorder = stream => {\n    const recorder = new MediaRecorder(stream, {\n        mimeType: CONFIG.codec,\n        videoBitsPerSecond: CONFIG.quality,\n        ...CONFIG.options\n    })\n    const chunks = []\n    \n    recorder.ondataavailable = e => {\n        log(`Data chunk: ${(e.data.size / 1024).toFixed(1)}KB`)\n        chunks.push(e.data)\n    }\n    \n    return { recorder, chunks }\n}\n\nexport default async (svg, onProgress) => {\n    const speedControl = document.getElementById('speed')\n    const userSpeed = speedControl ? Number(speedControl.value) : 5\n    log('User speed setting:', userSpeed)\n    \n    const cyclesPerSecond = userSpeed / 10\n    \n    log('Starting recording process', { \n        ...CONFIG, \n        userSpeed,\n        cyclesPerSecond: cyclesPerSecond.toFixed(2),\n        cycleTimeSeconds: (1 / cyclesPerSecond).toFixed(2)\n    })\n    \n    const firstCanvas = await captureState(svg, 0)\n    log('First frame captured', firstCanvas.width, firstCanvas.height)\n    \n    const stream = firstCanvas.captureStream(CONFIG.fps)\n    log('Stream created', stream.id)\n    \n    const { recorder, chunks } = initRecorder(stream)\n    \n    return new Promise(resolve => {\n        const startTime = performance.now()\n        log('Recording started at', startTime)\n        \n        recorder.start(500)\n        \n        const renderFrame = async now => {\n            const elapsed = (now - startTime) / 1_000\n            \n            if (elapsed >= CONFIG.duration) {\n                log('Duration reached, stopping', elapsed)\n                recorder.stop()\n                return\n            }\n            \n            const progress = elapsed / CONFIG.duration\n            onProgress?.(progress)\n            \n            const animProgress = (elapsed * cyclesPerSecond) % 1\n            const canvas = await captureState(svg, animProgress)\n            const ctx = firstCanvas.getContext('2d', { alpha: true })\n            ctx.clearRect(0, 0, firstCanvas.width, firstCanvas.height)\n            ctx.drawImage(canvas, 0, 0)\n            \n            requestAnimationFrame(renderFrame)\n        }\n        \n        recorder.onstop = () => {\n            const totalSize = chunks.reduce((sum, chunk) => sum + chunk.size, 0)\n            log('Recording complete:', {\n                chunks: chunks.length,\n                totalSize: `${(totalSize / 1024 / 1024).toFixed(2)}MB`,\n                avgChunkSize: `${(totalSize / chunks.length / 1024).toFixed(1)}KB`\n            })\n            const blob = new Blob(chunks, { type: 'video/webm' })\n            resolve(blob)\n        }\n        \n        requestAnimationFrame(renderFrame)\n    })\n}","const W = typeof window < \"u\", u = (1 << 16) - 1, _ = u * u, $ = (1 << 9) - 1, C = [\n  0,\n  20,\n  40,\n  60,\n  80,\n  99,\n  119,\n  139,\n  159,\n  179,\n  199,\n  219,\n  241,\n  264,\n  288,\n  313,\n  340,\n  367,\n  396,\n  427,\n  458,\n  491,\n  526,\n  562,\n  599,\n  637,\n  677,\n  718,\n  761,\n  805,\n  851,\n  898,\n  947,\n  997,\n  1048,\n  1101,\n  1156,\n  1212,\n  1270,\n  1330,\n  1391,\n  1453,\n  1517,\n  1583,\n  1651,\n  1720,\n  1790,\n  1863,\n  1937,\n  2013,\n  2090,\n  2170,\n  2250,\n  2333,\n  2418,\n  2504,\n  2592,\n  2681,\n  2773,\n  2866,\n  2961,\n  3058,\n  3157,\n  3258,\n  3360,\n  3464,\n  3570,\n  3678,\n  3788,\n  3900,\n  4014,\n  4129,\n  4247,\n  4366,\n  4488,\n  4611,\n  4736,\n  4864,\n  4993,\n  5124,\n  5257,\n  5392,\n  5530,\n  5669,\n  5810,\n  5953,\n  6099,\n  6246,\n  6395,\n  6547,\n  6700,\n  6856,\n  7014,\n  7174,\n  7335,\n  7500,\n  7666,\n  7834,\n  8004,\n  8177,\n  8352,\n  8528,\n  8708,\n  8889,\n  9072,\n  9258,\n  9445,\n  9635,\n  9828,\n  10022,\n  10219,\n  10417,\n  10619,\n  10822,\n  11028,\n  11235,\n  11446,\n  11658,\n  11873,\n  12090,\n  12309,\n  12530,\n  12754,\n  12980,\n  13209,\n  13440,\n  13673,\n  13909,\n  14146,\n  14387,\n  14629,\n  14874,\n  15122,\n  15371,\n  15623,\n  15878,\n  16135,\n  16394,\n  16656,\n  16920,\n  17187,\n  17456,\n  17727,\n  18001,\n  18277,\n  18556,\n  18837,\n  19121,\n  19407,\n  19696,\n  19987,\n  20281,\n  20577,\n  20876,\n  21177,\n  21481,\n  21787,\n  22096,\n  22407,\n  22721,\n  23038,\n  23357,\n  23678,\n  24002,\n  24329,\n  24658,\n  24990,\n  25325,\n  25662,\n  26001,\n  26344,\n  26688,\n  27036,\n  27386,\n  27739,\n  28094,\n  28452,\n  28813,\n  29176,\n  29542,\n  29911,\n  30282,\n  30656,\n  31033,\n  31412,\n  31794,\n  32179,\n  32567,\n  32957,\n  33350,\n  33745,\n  34143,\n  34544,\n  34948,\n  35355,\n  35764,\n  36176,\n  36591,\n  37008,\n  37429,\n  37852,\n  38278,\n  38706,\n  39138,\n  39572,\n  40009,\n  40449,\n  40891,\n  41337,\n  41785,\n  42236,\n  42690,\n  43147,\n  43606,\n  44069,\n  44534,\n  45002,\n  45473,\n  45947,\n  46423,\n  46903,\n  47385,\n  47871,\n  48359,\n  48850,\n  49344,\n  49841,\n  50341,\n  50844,\n  51349,\n  51858,\n  52369,\n  52884,\n  53401,\n  53921,\n  54445,\n  54971,\n  55500,\n  56032,\n  56567,\n  57105,\n  57646,\n  58190,\n  58737,\n  59287,\n  59840,\n  60396,\n  60955,\n  61517,\n  62082,\n  62650,\n  63221,\n  63795,\n  64372,\n  64952,\n  65535\n], N = [\n  0,\n  6,\n  13,\n  18,\n  22,\n  25,\n  28,\n  31,\n  34,\n  36,\n  38,\n  40,\n  42,\n  44,\n  46,\n  48,\n  50,\n  51,\n  53,\n  54,\n  56,\n  57,\n  59,\n  60,\n  61,\n  62,\n  64,\n  65,\n  66,\n  67,\n  69,\n  70,\n  71,\n  72,\n  73,\n  74,\n  75,\n  76,\n  77,\n  78,\n  79,\n  80,\n  81,\n  82,\n  83,\n  84,\n  85,\n  86,\n  86,\n  87,\n  88,\n  89,\n  90,\n  91,\n  91,\n  92,\n  93,\n  94,\n  95,\n  95,\n  96,\n  97,\n  98,\n  98,\n  99,\n  100,\n  101,\n  101,\n  102,\n  103,\n  103,\n  104,\n  105,\n  106,\n  106,\n  107,\n  108,\n  108,\n  109,\n  110,\n  110,\n  111,\n  111,\n  112,\n  113,\n  113,\n  114,\n  115,\n  115,\n  116,\n  116,\n  117,\n  118,\n  118,\n  119,\n  119,\n  120,\n  121,\n  121,\n  122,\n  122,\n  123,\n  123,\n  124,\n  125,\n  125,\n  126,\n  126,\n  127,\n  127,\n  128,\n  128,\n  129,\n  129,\n  130,\n  130,\n  131,\n  132,\n  132,\n  133,\n  133,\n  134,\n  134,\n  135,\n  135,\n  136,\n  136,\n  137,\n  137,\n  138,\n  138,\n  139,\n  139,\n  140,\n  140,\n  140,\n  141,\n  141,\n  142,\n  142,\n  143,\n  143,\n  144,\n  144,\n  145,\n  145,\n  146,\n  146,\n  147,\n  147,\n  147,\n  148,\n  148,\n  149,\n  149,\n  150,\n  150,\n  151,\n  151,\n  151,\n  152,\n  152,\n  153,\n  153,\n  154,\n  154,\n  154,\n  155,\n  155,\n  156,\n  156,\n  156,\n  157,\n  157,\n  158,\n  158,\n  159,\n  159,\n  159,\n  160,\n  160,\n  161,\n  161,\n  161,\n  162,\n  162,\n  163,\n  163,\n  163,\n  164,\n  164,\n  165,\n  165,\n  165,\n  166,\n  166,\n  166,\n  167,\n  167,\n  168,\n  168,\n  168,\n  169,\n  169,\n  169,\n  170,\n  170,\n  171,\n  171,\n  171,\n  172,\n  172,\n  172,\n  173,\n  173,\n  174,\n  174,\n  174,\n  175,\n  175,\n  175,\n  176,\n  176,\n  176,\n  177,\n  177,\n  177,\n  178,\n  178,\n  179,\n  179,\n  179,\n  180,\n  180,\n  180,\n  181,\n  181,\n  181,\n  182,\n  182,\n  182,\n  183,\n  183,\n  183,\n  184,\n  184,\n  184,\n  185,\n  185,\n  185,\n  186,\n  186,\n  186,\n  187,\n  187,\n  187,\n  188,\n  188,\n  188,\n  189,\n  189,\n  189,\n  190,\n  190,\n  190,\n  191,\n  191,\n  191,\n  192,\n  192,\n  192,\n  193,\n  193,\n  193,\n  193,\n  194,\n  194,\n  194,\n  195,\n  195,\n  195,\n  196,\n  196,\n  196,\n  197,\n  197,\n  197,\n  198,\n  198,\n  198,\n  198,\n  199,\n  199,\n  199,\n  200,\n  200,\n  200,\n  201,\n  201,\n  201,\n  201,\n  202,\n  202,\n  202,\n  203,\n  203,\n  203,\n  204,\n  204,\n  204,\n  204,\n  205,\n  205,\n  205,\n  206,\n  206,\n  206,\n  206,\n  207,\n  207,\n  207,\n  208,\n  208,\n  208,\n  208,\n  209,\n  209,\n  209,\n  210,\n  210,\n  210,\n  210,\n  211,\n  211,\n  211,\n  212,\n  212,\n  212,\n  212,\n  213,\n  213,\n  213,\n  214,\n  214,\n  214,\n  214,\n  215,\n  215,\n  215,\n  215,\n  216,\n  216,\n  216,\n  217,\n  217,\n  217,\n  217,\n  218,\n  218,\n  218,\n  218,\n  219,\n  219,\n  219,\n  220,\n  220,\n  220,\n  220,\n  221,\n  221,\n  221,\n  221,\n  222,\n  222,\n  222,\n  222,\n  223,\n  223,\n  223,\n  224,\n  224,\n  224,\n  224,\n  225,\n  225,\n  225,\n  225,\n  226,\n  226,\n  226,\n  226,\n  227,\n  227,\n  227,\n  227,\n  228,\n  228,\n  228,\n  228,\n  229,\n  229,\n  229,\n  229,\n  230,\n  230,\n  230,\n  230,\n  231,\n  231,\n  231,\n  231,\n  232,\n  232,\n  232,\n  232,\n  233,\n  233,\n  233,\n  233,\n  234,\n  234,\n  234,\n  234,\n  235,\n  235,\n  235,\n  235,\n  236,\n  236,\n  236,\n  236,\n  237,\n  237,\n  237,\n  237,\n  238,\n  238,\n  238,\n  238,\n  239,\n  239,\n  239,\n  239,\n  239,\n  240,\n  240,\n  240,\n  240,\n  241,\n  241,\n  241,\n  241,\n  242,\n  242,\n  242,\n  242,\n  243,\n  243,\n  243,\n  243,\n  243,\n  244,\n  244,\n  244,\n  244,\n  245,\n  245,\n  245,\n  245,\n  246,\n  246,\n  246,\n  246,\n  246,\n  247,\n  247,\n  247,\n  247,\n  248,\n  248,\n  248,\n  248,\n  249,\n  249,\n  249,\n  249,\n  249,\n  250,\n  250,\n  250,\n  250,\n  251,\n  251,\n  251,\n  251,\n  251,\n  252,\n  252,\n  252,\n  252,\n  253,\n  253,\n  253,\n  253,\n  253,\n  254,\n  254,\n  254,\n  254,\n  255,\n  255,\n  255\n];\nfunction y(l) {\n  let t;\n  if (l <= 0)\n    return 0;\n  if (l >= u)\n    return u;\n  t = l * (l * (l + -144107) / u + 132114) / u + 14379;\n  for (let e = 0; e < 2; e++) {\n    const n = t * t * t, r = l + (2 * n + _ / 2) / _;\n    t = (t * (2 * l + (n + _ / 2) / _) + r / 2) / r;\n  }\n  return t;\n}\nfunction b(l, t) {\n  return (l ^ t) < 0 ? (l - t / 2) / t : (l + t / 2) / t;\n}\nfunction P(l, t, e, n, r = !0, s = [255, 255, 255]) {\n  if (!r) {\n    n /= 255;\n    const i = 1 - n;\n    l = l * n + i * s[0] & 255, t = t * n + i * s[1] & 255, e = e * n + i * s[2] & 255;\n  }\n  return { r: l, g: t, b: e };\n}\nfunction S(l, t, e) {\n  return l << 16 | t << 8 | e;\n}\nfunction M(l, t, e) {\n  l = C[l], t = C[t], e = C[e];\n  const n = (27015 * l + 35149 * t + 3372 * e + u / 2) / u, r = (13887 * l + 44610 * t + 7038 * e + u / 2) / u, s = (5787 * l + 18462 * t + 41286 * e + u / 2) / u, i = y(n), a = y(r), h = y(s);\n  return {\n    l: b(13792 * i + 52010 * a - 267 * h, u),\n    a: b(129628 * i - 159158 * a + 29530 * h, u),\n    b: b(1698 * i + 51299 * a - 52997 * h, u)\n  };\n}\nfunction I(l) {\n  if (l <= 0)\n    return 0;\n  if (l >= u)\n    return 255;\n  {\n    const t = l * $, e = ~~(t / u), n = t % u, r = N[e], s = N[e + 1];\n    return (n * (s - r) + u / 2) / u + r;\n  }\n}\nfunction q(l) {\n  const t = l.l + b(25974 * l.a, u) + b(14143 * l.b, u), e = l.l + b(-6918 * l.a, u) + b(-4185 * l.b, u), n = l.l + b(-5864 * l.a, u) + b(-84638 * l.b, u), r = t ** 3 / _, s = e ** 3 / _, i = n ** 3 / _, a = ~~I((267169 * r + -216771 * s + 15137 * i + u / 2) / u), h = ~~I((-83127 * r + 171030 * s + -22368 * i + u / 2) / u), o = ~~I((-275 * r + -46099 * s + 111909 * i + u / 2) / u);\n  return { r: a, g: h, b: o };\n}\nfunction U(l) {\n  return new Promise((t) => {\n    const e = new Image();\n    e.decoding = \"sync\", e.loading = \"eager\", e.crossOrigin = \"anonymous\", e.onload = () => t(e), e.onerror = () => t(e), e.src = l;\n  });\n}\nclass v {\n  constructor() {\n    this.readable = new ReadableStream({\n      start: (t) => this._rsControler = t\n    }), this.writable = new WritableStream({\n      write: async (t) => {\n        let e;\n        switch (typeof t) {\n          case \"string\": {\n            const n = await U(t), r = v.ctx2d, s = r.canvas;\n            r.clearRect(0, 0, s.width, s.height), s.width = n.width, s.height = n.height, r.drawImage(n, 0, 0, s.width, s.height), e = r.getImageData(0, 0, s.width, s.height).data;\n            break;\n          }\n          default:\n            if (ArrayBuffer.isView(t))\n              e = new Uint8ClampedArray(t.buffer);\n            else if (t instanceof ArrayBuffer)\n              e = new Uint8ClampedArray(t);\n            else if (Array.isArray(t))\n              if (Array.isArray(t[0])) {\n                const n = [];\n                for (let r = t.length, s = 0; s < r; s++)\n                  n.push(\n                    t[s][0] ?? 0,\n                    t[s][1] ?? 0,\n                    t[s][2] ?? 0,\n                    t[s][3] ?? 255\n                  );\n                e = new Uint8ClampedArray(n);\n              } else\n                e = new Uint8ClampedArray(t);\n            else {\n              const n = v.ctx2d, r = n.canvas;\n              n.clearRect(0, 0, r.width, r.height), r.width = typeof t.width == \"number\" ? t.width : t.width.baseVal.value, r.height = typeof t.height == \"number\" ? t.height : t.height.baseVal.value, n.drawImage(t, 0, 0, r.width, r.height), e = n.getImageData(0, 0, r.width, r.height).data;\n            }\n            break;\n        }\n        this._rsControler.enqueue(e);\n      },\n      close: () => {\n        this._rsControler.close();\n      }\n    });\n  }\n  static get ctx2d() {\n    if (!this._ctx2d) {\n      if (!W)\n        throw new Error(\"Failed to get ImageToPixels.ctx2d, not in browser.\");\n      const t = document.createElement(\"canvas\").getContext(\"2d\", { willReadFrequently: !0 });\n      if (!t)\n        throw new Error(\"Failed to get ImageToPixels.ctx2d, getContext('2d') return null.\");\n      this._ctx2d = t;\n    }\n    return this._ctx2d;\n  }\n}\nclass A {\n  constructor(t) {\n    this.maxColors = t, this.readable = new ReadableStream({\n      start: (e) => this._rsControler = e\n    }), this.writable = new WritableStream({\n      write: (e) => {\n        this._rsControler.enqueue(\n          this._boxesToQuantizedColors(\n            this._colorsToBoxes(e)\n          )\n        );\n      },\n      close: () => {\n        this._rsControler.close();\n      }\n    });\n  }\n  static createSorter(t) {\n    const e = t[0], n = t[1], r = t[2];\n    return (s, i) => s.lab[e] - i.lab[e] || s.lab[n] - i.lab[n] || s.lab[r] - i.lab[r];\n  }\n  _colorsToBoxes(t) {\n    let e = {\n      start: 0,\n      end: t.length - 1,\n      sorted: null,\n      count: 0,\n      score: 0,\n      weight: 0,\n      sort: \"lab\",\n      avg: { l: 0, a: 0, b: 0 }\n    };\n    const n = [e];\n    let r = 1;\n    const s = (o, m, c) => o >= m ? m >= c ? \"lab\" : o >= c ? \"lba\" : \"bla\" : o >= c ? \"alb\" : m >= c ? \"abl\" : \"bal\", i = (o) => {\n      const { start: m, end: c } = o;\n      o.count = c - m + 1, o.weight = 0;\n      const f = { l: 0, a: 0, b: 0 };\n      for (let p = m; p <= c; p++) {\n        const d = t[p];\n        f.l += d.lab.l * d.count, f.a += d.lab.a * d.count, f.b += d.lab.b * d.count, o.weight += d.count;\n      }\n      o.avg.l = f.l / o.weight, o.avg.a = f.a / o.weight, o.avg.b = f.b / o.weight;\n      const w = { l: 0, a: 0, b: 0 };\n      for (let p = m; p <= c; p++) {\n        const d = t[p];\n        w.l += (d.lab.l - o.avg.l) ** 2 * d.count, w.a += (d.lab.a - o.avg.a) ** 2 * d.count, w.b += (d.lab.b - o.avg.b) ** 2 * d.count;\n      }\n      o.sort = s(w.l, w.a, w.b), o.score = Math.max(w.l, w.a, w.b);\n    }, a = (o, m) => {\n      const c = {\n        start: m + 1,\n        end: o.end,\n        sorted: o.sorted,\n        count: 0,\n        score: 0,\n        weight: 0,\n        sort: \"lab\",\n        avg: { l: 0, a: 0, b: 0 }\n      };\n      i(c), o.end -= c.count, i(o), n.push(c), r++;\n    }, h = () => {\n      let o = -1, m = -1;\n      if (r === this.maxColors)\n        return -1;\n      for (let c = 0; c < r; c++) {\n        const f = n[c];\n        f.count >= 2 && f.score > m && (o = c, m = f.score);\n      }\n      return o;\n    };\n    for (i(e); e && e.count > 1; ) {\n      const { start: o, end: m, sort: c, sorted: f } = e;\n      if (c !== f) {\n        const R = t.slice(o, m + 1).sort(A.createSorter(c));\n        for (let E = R.length, x = 0; x < E; x++)\n          t[o + x] = R[x];\n        e.sorted = c;\n      }\n      const p = e.weight + 1 >> 1;\n      let d = o, g = 0;\n      for (; d < m - 1 && (g += t[d].count, !(g > p)); d++)\n        ;\n      a(e, d);\n      const T = h();\n      e = T >= 0 ? n[T] : null;\n    }\n    return n;\n  }\n  _boxesToQuantizedColors(t) {\n    const e = t.reduce((n, r) => n + r.weight, 0);\n    return t.map((n) => {\n      const { r, g: s, b: i } = q(n.avg);\n      return {\n        rgbInt: S(r, s, i),\n        rgb: { r, g: s, b: i },\n        hex: `#${r.toString(16).padStart(2, \"0\")}${s.toString(16).padStart(2, \"0\")}${i.toString(16).padStart(2, \"0\")}`,\n        lab: n.avg,\n        count: n.weight,\n        percentage: n.weight / e\n      };\n    }).sort((n, r) => n.rgbInt - r.rgbInt);\n  }\n}\nclass B {\n  constructor(t, e, n) {\n    this.statsMode = t, this.premultipliedAlpha = e, this.tint = n, this._colors = [], this._cache = /* @__PURE__ */ new Map(), this.readable = new ReadableStream({\n      start: (r) => this._rsControler = r\n    }), this.writable = new WritableStream({\n      write: (r) => {\n        for (let s = r.length, i = 0; i < s; i += 4) {\n          let a = r[i], h = r[i + 1], o = r[i + 2];\n          const m = r[i + 3];\n          if (this.statsMode === \"diff\" && this._previousPixels && a === this._previousPixels[i] && h === this._previousPixels[i + 1] && o === this._previousPixels[i + 2] && m === this._previousPixels[i + 3])\n            continue;\n          ({ r: a, g: h, b: o } = P(a, h, o, m, this.premultipliedAlpha, this.tint));\n          const c = S(a, h, o), f = {\n            rgbInt: c,\n            lab: M(a, h, o),\n            count: 1\n          }, w = c % 32768;\n          let p = this._cache.get(w);\n          p || this._cache.set(w, p = /* @__PURE__ */ new Map());\n          let d = p.get(c);\n          if (d !== void 0) {\n            this._colors[d].count++;\n            continue;\n          }\n          d = this._colors.push(f) - 1, p.set(c, d);\n        }\n        this.statsMode === \"diff\" && (this._previousPixels = r);\n      },\n      close: () => {\n        this._rsControler.enqueue(this._colors.slice()), this._rsControler.close(), this._colors.length = 0, this._cache.clear(), this._previousPixels = void 0;\n      }\n    });\n  }\n}\nclass F {\n  constructor(t = [], e = !1, n = [255, 255, 255]) {\n    this._premultipliedAlpha = e, this._tint = n, this._cache = /* @__PURE__ */ new Map(), this._colorMap = [], t.length && this.setup(t);\n  }\n  setup(t) {\n    t = t.sort((i, a) => i.rgbInt - a.rgbInt), this._cache.clear();\n    const e = [], n = /* @__PURE__ */ new Map();\n    for (let i = -1, a = t.length, h = 0; h < a; h++) {\n      const { rgbInt: o } = t[h];\n      if (o === i) {\n        n.set(h, !0);\n        continue;\n      }\n      i = o;\n    }\n    s({\n      min: [-65535, -65535, -65535],\n      max: [65535, 65535, 65535]\n    }), this._colorMap = e;\n    function r(i) {\n      const a = {\n        min: [65535, 65535, 65535],\n        max: [-65535, -65535, -65535]\n      }, h = [];\n      for (let p = t.length, d = 0; d < p; d++) {\n        const { lab: g } = t[d];\n        n.has(d) || g.l < i.min[0] || g.a < i.min[1] || g.b < i.min[2] || g.l > i.max[0] || g.a > i.max[1] || g.b > i.max[2] || (g.l < a.min[0] && (a.min[0] = g.l), g.a < a.min[1] && (a.min[1] = g.a), g.b < a.min[2] && (a.min[2] = g.b), g.l > a.max[0] && (a.max[0] = g.l), g.a > a.max[1] && (a.max[1] = g.a), g.b > a.max[2] && (a.max[2] = g.b), h.push({\n          lab: g,\n          index: d\n        }));\n      }\n      let o = \"l\", m = 0;\n      if (!h.length)\n        return { index: -1, longest: o, longestIndex: m };\n      const c = a.max[0] - a.min[0], f = a.max[1] - a.min[1], w = a.max[2] - a.min[2];\n      return w >= c && w >= f && (o = \"b\", m = 2), f >= c && f >= w && (o = \"a\", m = 1), c >= f && c >= w && (o = \"l\", m = 0), {\n        index: h.sort((p, d) => p.lab[o] - d.lab[o])[h.length >> 1].index,\n        longest: o,\n        longestIndex: m\n      };\n    }\n    function s(i) {\n      const { index: a, longest: h, longestIndex: o } = r(i);\n      if (a < 0)\n        return -1;\n      n.set(a, !0);\n      const { lab: m } = t[a], c = {\n        left: 0,\n        right: 0,\n        longest: h,\n        lab: m,\n        index: a\n      }, f = e.push(c) - 1, w = { max: [...i.max], min: [...i.min] }, p = { max: [...i.max], min: [...i.min] };\n      w.max[o] = m[h], p.min[o] = Math.min(m[h] + 1, 65535);\n      const d = s(w);\n      let g = -1;\n      return p.min[o] <= p.max[o] && (g = s(p)), c.left = d, c.right = g, f;\n    }\n  }\n  _colormapNearestNode(t, e, n) {\n    const { left: r, right: s, longest: i, lab: a, index: h } = this._colorMap[t], o = Math.min(\n      (e.l - a.l) ** 2 + (e.a - a.a) ** 2 + (e.b - a.b) ** 2,\n      4294967295 - 1\n    );\n    o < n.dist && (n.index = h, n.dist = o);\n    let m, c;\n    if (r !== -1 || s !== -1) {\n      const f = e[i] - a[i];\n      f <= 0 ? (m = r, c = s) : (m = s, c = r), m !== -1 && this._colormapNearestNode(m, e, n), c !== -1 && f ** 2 < n.dist && this._colormapNearestNode(c, e, n);\n    }\n  }\n  findNearestIndex(t, e, n, r = 255) {\n    ({ r: t, g: e, b: n } = P(t, e, n, r, this._premultipliedAlpha, this._tint));\n    const s = S(t, e, n), i = s % 32768;\n    let a = this._cache.get(i);\n    a || this._cache.set(i, a = /* @__PURE__ */ new Map());\n    let h = a.get(s);\n    if (h !== void 0)\n      return h;\n    const o = {\n      dist: Number.MAX_SAFE_INTEGER,\n      index: -1\n    };\n    return this._colormapNearestNode(0, M(t, e, n), o), h = o.index, a.set(s, h), h;\n  }\n}\nclass O {\n  constructor(t = {}) {\n    this.colors = [], this.config = this._resolveOptions(t), this._stream = this._createStream();\n  }\n  _resolveOptions(t) {\n    const {\n      maxColors: e = 256,\n      statsMode: n = \"full\",\n      algorithm: r = \"median-cut\",\n      premultipliedAlpha: s = !1,\n      tint: i = [255, 255, 255],\n      samples: a = []\n    } = t;\n    return {\n      maxColors: e,\n      statsMode: n,\n      algorithm: r,\n      premultipliedAlpha: s,\n      tint: i,\n      samples: a\n    };\n  }\n  _createStream() {\n    let t;\n    switch (this.config.algorithm) {\n      case \"median-cut\":\n      default:\n        t = new A(this.config.maxColors);\n        break;\n    }\n    return new ReadableStream({\n      start: (e) => {\n        this._streamControler = e, this.config.samples.forEach((n) => e.enqueue(n));\n      }\n    }).pipeThrough(new v()).pipeThrough(new B(this.config.statsMode, this.config.premultipliedAlpha, this.config.tint)).pipeThrough(t);\n  }\n  addSample(t) {\n    this._streamControler.enqueue(t);\n  }\n  generate() {\n    return new Promise((t) => {\n      this._streamControler.close(), this._stream.pipeTo(new WritableStream({\n        write: (e) => {\n          this.colors = e, this.finder = new F(e, this.config.premultipliedAlpha, this.config.tint), this._stream = this._createStream(), t(e);\n        }\n      }));\n    });\n  }\n  match(t) {\n    var s;\n    let e;\n    if (typeof t == \"number\")\n      e = [\n        t >> 24 & 255,\n        t >> 16 & 255,\n        t >> 8 & 255,\n        t & 255\n      ];\n    else if (typeof t == \"string\") {\n      const i = t.replace(/^#/, \"\");\n      e = [\n        `${i[0]}${i[1]}`,\n        `${i[2]}${i[3]}`,\n        `${i[4]}${i[5]}`\n      ].map((a) => parseInt(a, 16));\n    } else if (Array.isArray(t))\n      e = t;\n    else\n      throw new TypeError(\"Unsupported color format\");\n    const n = (s = this.finder) == null ? void 0 : s.findNearestIndex(e[0], e[1], e[2], e[3]);\n    if (n === void 0 || n < 0)\n      return;\n    const r = this.colors[n];\n    if (r)\n      return {\n        color: r,\n        index: n\n      };\n  }\n  toColors() {\n    return this.colors.slice();\n  }\n  toHexColors() {\n    return this.colors.map((t) => t.hex);\n  }\n  toRgbColors() {\n    return this.colors.map((t) => t.rgb);\n  }\n  toRgbIntColors() {\n    return this.colors.map((t) => t.rgbInt);\n  }\n  toLabColors() {\n    return this.colors.map((t) => t.lab);\n  }\n  toUint8Array(t = this.colors.length * 4) {\n    var r;\n    let e;\n    const n = new Uint8ClampedArray(t);\n    for (let s = 0; s < t; s++) {\n      const i = s * 4, a = ((r = this.colors[s]) == null ? void 0 : r.rgb) ?? e;\n      a && (n[i] = a.r, n[i + 1] = a.g, n[i + 2] = a.b, n[i + 3] = 255, e = a);\n    }\n    return n;\n  }\n  clear() {\n    this.colors.length = 0, this._stream = this._createStream();\n  }\n}\nexport {\n  F as Finder,\n  v as ImageToPixels,\n  A as MedianCut,\n  O as Palette,\n  B as PixelsToColors\n};\n","import { Finder, Palette } from 'modern-palette';\n\nconst SIGNATURE = \"GIF\";\nconst VERSIONS = [\"87a\", \"89a\"];\nconst IMAGE_DESCRIPTOR = 44;\nconst EXTENSION = 33;\nconst EXTENSION_APPLICATION = 255;\nconst EXTENSION_APPLICATION_BLOCK_SIZE = 11;\nconst EXTENSION_COMMENT = 254;\nconst EXTENSION_GRAPHIC_CONTROL = 249;\nconst EXTENSION_GRAPHIC_CONTROL_BLOCK_SIZE = 4;\nconst EXTENSION_PLAIN_TEXT = 1;\nconst EXTENSION_PLAIN_TEXT_BLOCK_SIZE = 1;\nconst TRAILER = 59;\nfunction mergeBuffers(buffers) {\n  const container = new Uint8Array(\n    buffers.reduce((total, array) => total + array.byteLength, 0)\n  );\n  buffers.reduce((offset, array) => {\n    container.set(array, offset);\n    return offset + array.byteLength;\n  }, 0);\n  return container;\n}\nfunction resovleSource(source, output, options) {\n  let buffer;\n  if (ArrayBuffer.isView(source)) {\n    buffer = source.buffer;\n  } else if (source instanceof ArrayBuffer) {\n    buffer = source;\n  } else {\n    const canvas = document.createElement(\"canvas\");\n    const { width, height } = options || {};\n    const context2d = canvas.getContext(\"2d\");\n    if (!context2d) {\n      throw new Error(\"Failed to create canvas context2d\");\n    }\n    canvas.width = width ?? (\"width\" in source ? typeof source.width === \"number\" ? source.width : source.width.baseVal.value : 0);\n    canvas.height = height ?? (\"height\" in source ? typeof source.height === \"number\" ? source.height : source.height.baseVal.value : 0);\n    context2d.drawImage(source, 0, 0, canvas.width, canvas.height);\n    buffer = context2d.getImageData(0, 0, canvas.width, canvas.height).data.buffer;\n  }\n  switch (output) {\n    case \"uint8Array\":\n      return new Uint8Array(buffer);\n    case \"uint8ClampedArray\":\n      return new Uint8ClampedArray(buffer);\n    case \"dataView\":\n      return new DataView(buffer);\n    default:\n      throw new Error(\"Unsupported output format\");\n  }\n}\nfunction createImage(url) {\n  const img = new Image();\n  img.decoding = \"sync\";\n  img.loading = \"eager\";\n  img.crossOrigin = \"anonymous\";\n  img.src = url;\n  return img;\n}\nfunction loadImage(url) {\n  return new Promise((resolve, reject) => {\n    const img = createImage(url);\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n  });\n}\n\nclass Reader {\n  _view;\n  offset = 0;\n  constructor(source) {\n    this._view = resovleSource(source, \"dataView\");\n  }\n  readByte() {\n    return this._view.getUint8(this.offset++);\n  }\n  readBytes(length) {\n    return Array.from({ length }).map(() => this.readByte());\n  }\n  readString(length) {\n    return String.fromCharCode(...this.readBytes(length));\n  }\n  readUnsigned() {\n    return [this._view.getUint16(this.offset, true), this.offset += 2][0];\n  }\n  readBits() {\n    return this._view.getUint8(this.offset++).toString(2).padStart(8, \"0\").split(\"\").map(Number);\n  }\n  readColorTable(length) {\n    return Array.from({ length }, () => Array.from(this.readBytes(3)));\n  }\n  readSubBlock() {\n    const block = [];\n    while (true) {\n      const val = this.readByte();\n      if (val === 0 && this._view.getUint8(this.offset) !== 0)\n        break;\n      block.push(val);\n    }\n    return block;\n  }\n}\n\nfunction decode(source) {\n  const gif = {};\n  const reader = new Reader(source);\n  const createFrame = () => ({ index: 0, delay: 100, disposal: 0 });\n  const signature = reader.readString(3);\n  const version = reader.readString(3);\n  if (signature !== SIGNATURE || !VERSIONS.includes(version)) {\n    throw new Error(\"This is not a 87a/89a GIF data.\");\n  }\n  gif.version = version;\n  gif.width = reader.readUnsigned();\n  gif.height = reader.readUnsigned();\n  const bits = reader.readBits();\n  gif.globalColorTable = Boolean(bits[0]);\n  gif.colorResoluTion = Number.parseInt(bits.slice(1, 4).join(\"\"), 2) + 1;\n  gif.colorTableSorted = Boolean(bits[4]);\n  const colorTableSize = Number.parseInt(bits.slice(5, 8).join(\"\"), 2);\n  gif.colorTableSize = 2 ** (colorTableSize + 1);\n  gif.backgroundColorIndex = reader.readByte();\n  gif.pixelAspectRatio = reader.readByte();\n  if (gif.globalColorTable) {\n    if (gif.colorTableSize) {\n      gif.colorTable = reader.readColorTable(gif.colorTableSize);\n    } else {\n      reader.readSubBlock();\n    }\n  }\n  gif.frames = [];\n  let frame = createFrame();\n  const flags = [];\n  const extensionFlags = [];\n  while (true) {\n    const flag = reader.readByte();\n    flags.push(flag);\n    if (flag === IMAGE_DESCRIPTOR) {\n      frame.left = reader.readUnsigned();\n      frame.top = reader.readUnsigned();\n      frame.width = reader.readUnsigned();\n      frame.height = reader.readUnsigned();\n      const bits2 = reader.readBits();\n      frame.localColorTable = Boolean(bits2[0]);\n      frame.interlaced = Boolean(bits2[1]);\n      frame.colorTableSorted = Boolean(bits2[2]);\n      frame.reserved = Number.parseInt(bits2.slice(3, 5).join(\"\"), 2);\n      const colorTableSize2 = Number.parseInt(bits2.slice(5, 8).join(\"\"), 2);\n      frame.colorTableSize = 2 ** (colorTableSize2 + 1);\n      if (frame.localColorTable) {\n        frame.colorTable = reader.readColorTable(frame.colorTableSize);\n      }\n      frame.lzwMinCodeSize = reader.readByte();\n      frame.dataPositions = [];\n      while (true) {\n        const length = reader.readByte();\n        if (length === 0)\n          break;\n        const offset = reader.offset;\n        frame.dataPositions.push([offset, length]);\n        reader.offset = offset + length;\n      }\n      gif.frames.push(frame);\n      frame = createFrame();\n      frame.index = gif.frames.length;\n      continue;\n    }\n    if (flag === EXTENSION) {\n      const extensionFlag = reader.readByte();\n      extensionFlags.push(extensionFlag);\n      if (extensionFlag === EXTENSION_APPLICATION) {\n        if (reader.readByte() !== EXTENSION_APPLICATION_BLOCK_SIZE)\n          continue;\n        const application = {\n          identifier: reader.readString(8),\n          code: reader.readString(3),\n          data: []\n        };\n        if (`${application.identifier}${application.code}` === \"NETSCAPE2.0\") {\n          if (reader.readByte() === 3) {\n            gif.looped = Boolean(reader.readByte());\n            gif.loopCount = reader.readUnsigned();\n          }\n        }\n        application.data = reader.readSubBlock();\n        frame.application = application;\n        continue;\n      }\n      if (extensionFlag === EXTENSION_COMMENT) {\n        frame.comment = reader.readSubBlock().map((val) => String.fromCharCode(val)).join(\"\");\n        continue;\n      }\n      if (extensionFlag === EXTENSION_GRAPHIC_CONTROL) {\n        if (reader.readByte() !== EXTENSION_GRAPHIC_CONTROL_BLOCK_SIZE)\n          continue;\n        const bits2 = reader.readBits();\n        const graphicControl = {\n          // ↓ <Packed Fields>\n          reserved: Number.parseInt(bits2.slice(0, 3).join(\"\"), 2),\n          disposal: Number.parseInt(bits2.slice(3, 6).join(\"\"), 2),\n          userInput: Boolean(bits2[6]),\n          transparent: Boolean(bits2[7]),\n          // ↑ <Packed Fields>\n          delayTime: reader.readUnsigned(),\n          transparentIndex: reader.readByte()\n        };\n        reader.readSubBlock();\n        frame.graphicControl = graphicControl;\n        frame.disposal = graphicControl.disposal;\n        frame.delay = (graphicControl.delayTime || 10) * 10;\n        continue;\n      }\n      if (extensionFlag === EXTENSION_PLAIN_TEXT) {\n        if (reader.readByte() !== EXTENSION_PLAIN_TEXT_BLOCK_SIZE)\n          continue;\n        frame.plainText = {\n          left: reader.readUnsigned(),\n          top: reader.readUnsigned(),\n          width: reader.readUnsigned(),\n          height: reader.readUnsigned(),\n          cellWidth: reader.readByte(),\n          cellHeight: reader.readByte(),\n          colorIndex: reader.readByte(),\n          backgroundColorIndex: reader.readByte(),\n          data: reader.readSubBlock()\n        };\n        continue;\n      }\n      console.warn(\n        `Unknown extension block: 0x${extensionFlag.toString(16)}`,\n        flags.slice(0, flags.length - 1).map((val) => `0x${val.toString(16)}`),\n        extensionFlags.slice(0, extensionFlags.length - 1).map((val) => `0x${val.toString(16)}`)\n      );\n      continue;\n    }\n    if (flag === TRAILER)\n      break;\n    console.warn(\n      `Unknown block: 0x${flag.toString(16)}`,\n      flags.slice(0, flags.length - 1).map((val) => `0x${val.toString(16)}`),\n      extensionFlags.slice(0, extensionFlags.length - 1).map((val) => `0x${val.toString(16)}`)\n    );\n  }\n  return gif;\n}\n\nfunction createWorker(options) {\n  const callbacks = /* @__PURE__ */ new Map();\n  const { workerUrl } = options;\n  let { workerNumber = 1 } = options;\n  const workers = [...Array.from({ length: workerUrl ? workerNumber : 0 })].map(() => {\n    try {\n      const worker = new Worker(workerUrl);\n      worker.onmessage = onMessage;\n      return worker;\n    } catch (err) {\n      console.warn(err);\n      return null;\n    }\n  }).filter(Boolean);\n  workerNumber = workers.length;\n  function onMessage(event) {\n    const { id, data } = event.data;\n    callbacks.get(id)?.(data);\n    callbacks.delete(id);\n  }\n  const getWorker = /* @__PURE__ */ function() {\n    let id = 0;\n    return (index) => workers[(index ?? id++) % workerNumber];\n  }();\n  const call = /* @__PURE__ */ function() {\n    let id = 0;\n    return (type, data, transfer, index) => {\n      return new Promise((resolve) => {\n        const worker = getWorker(index);\n        if (!worker)\n          return resolve(void 0);\n        callbacks.set(id, resolve);\n        worker.postMessage({ id: id++, type, data }, { transfer });\n      });\n    };\n  }();\n  return {\n    call\n  };\n}\n\nfunction deinterlace(pixels, width) {\n  const newPixels = Array.from({ length: pixels.length });\n  const rows = pixels.length / width;\n  const offsets = [0, 4, 2, 1];\n  const steps = [8, 8, 4, 2];\n  let fromRow = 0;\n  for (let pass = 0; pass < 4; pass++) {\n    for (let toRow = offsets[pass]; toRow < rows; toRow += steps[pass]) {\n      newPixels.splice.apply(\n        newPixels,\n        [toRow * width, width].concat(\n          pixels.slice(fromRow * width, (fromRow + 1) * width)\n        )\n      );\n      fromRow++;\n    }\n  }\n  return newPixels;\n}\n\nfunction lzwDecode(minCodeSize, data, pixelCount) {\n  const MAX_STACK_SIZE = 4096;\n  const nullCode = -1;\n  const npix = pixelCount;\n  let available, codeMask, codeSize, inCode, oldCode, code, i;\n  const dstPixels = Array.from({ length: pixelCount });\n  const prefix = Array.from({ length: MAX_STACK_SIZE });\n  const suffix = Array.from({ length: MAX_STACK_SIZE });\n  const pixelStack = Array.from({ length: MAX_STACK_SIZE + 1 });\n  const dataSize = minCodeSize;\n  const clear = 1 << dataSize;\n  const endOfInformation = clear + 1;\n  available = clear + 2;\n  oldCode = nullCode;\n  codeSize = dataSize + 1;\n  codeMask = (1 << codeSize) - 1;\n  for (code = 0; code < clear; code++) {\n    prefix[code] = 0;\n    suffix[code] = code;\n  }\n  let datum, bits, first, top, pi, bi;\n  datum = bits = first = top = pi = bi = 0;\n  for (i = 0; i < npix; ) {\n    if (top === 0) {\n      if (bits < codeSize) {\n        datum += data[bi] << bits;\n        bits += 8;\n        bi++;\n        continue;\n      }\n      code = datum & codeMask;\n      datum >>= codeSize;\n      bits -= codeSize;\n      if (code > available || code === endOfInformation) {\n        break;\n      }\n      if (code === clear) {\n        codeSize = dataSize + 1;\n        codeMask = (1 << codeSize) - 1;\n        available = clear + 2;\n        oldCode = nullCode;\n        continue;\n      }\n      if (oldCode === nullCode) {\n        pixelStack[top++] = suffix[code];\n        oldCode = code;\n        first = code;\n        continue;\n      }\n      inCode = code;\n      if (code === available) {\n        pixelStack[top++] = first;\n        code = oldCode;\n      }\n      while (code > clear) {\n        pixelStack[top++] = suffix[code];\n        code = prefix[code];\n      }\n      first = suffix[code] & 255;\n      pixelStack[top++] = first;\n      if (available < MAX_STACK_SIZE) {\n        prefix[available] = oldCode;\n        suffix[available] = first;\n        available++;\n        if ((available & codeMask) === 0 && available < MAX_STACK_SIZE) {\n          codeSize++;\n          codeMask += available;\n        }\n      }\n      oldCode = inCode;\n    }\n    top--;\n    dstPixels[pi++] = pixelStack[top];\n    i++;\n  }\n  for (i = pi; i < npix; i++) {\n    dstPixels[i] = 0;\n  }\n  return dstPixels;\n}\n\nfunction decodeFrames(source, options) {\n  const array = resovleSource(source, \"uint8Array\");\n  if (options?.workerUrl) {\n    return createWorker({ workerUrl: options.workerUrl }).call(\n      \"frames:decode\",\n      array,\n      [array.buffer]\n    );\n  }\n  const {\n    gif = decode(source),\n    range\n  } = options ?? {};\n  const {\n    width: globalWidth,\n    height: globalHeight,\n    colorTable: globalColorTable,\n    frames: globalFrames\n  } = gif;\n  const frames = range ? globalFrames.slice(range[0], range[1] + 1) : globalFrames;\n  const hasDisposal3 = frames.some((frame) => frame.disposal === 3);\n  let pixels = new Uint8ClampedArray(globalWidth * globalHeight * 4);\n  let previousFrame;\n  let previousPixels = pixels.slice();\n  return frames.map((frame) => {\n    const {\n      left,\n      top,\n      width,\n      height,\n      interlaced,\n      localColorTable,\n      colorTable,\n      lzwMinCodeSize,\n      dataPositions,\n      graphicControl,\n      delay,\n      disposal\n    } = frame;\n    const previousDisposal = previousFrame?.disposal;\n    const bottom = top + height;\n    const {\n      transparent,\n      transparentIndex: localTransparentIndex\n    } = graphicControl ?? {};\n    const palette = localColorTable ? colorTable : globalColorTable;\n    const transparentIndex = transparent ? localTransparentIndex : -1;\n    const compressedData = mergeBuffers(\n      dataPositions.map(\n        ([begin, length]) => array.subarray(begin, begin + length)\n      )\n    );\n    let colorIndexes = lzwDecode(lzwMinCodeSize, compressedData, width * height);\n    if (interlaced) {\n      colorIndexes = deinterlace(colorIndexes, width);\n    }\n    if (previousDisposal === 3) {\n      pixels = previousPixels.slice();\n    } else if (previousDisposal === 2) {\n      const { left: left2, top: top2, width: width2, height: height2 } = previousFrame;\n      const bottom2 = top2 + height2;\n      for (let y = top2; y < bottom2; y++) {\n        const globalOffset = y * globalWidth + left2;\n        for (let x = 0; x < width2; x++) {\n          const index = (globalOffset + x) * 4;\n          pixels[index] = pixels[index + 1] = pixels[index + 2] = pixels[index + 3] = 0;\n        }\n      }\n    }\n    for (let y = top; y < bottom; y++) {\n      const globalOffset = y * globalWidth + left;\n      const localOffset = (y - top) * width;\n      for (let x = 0; x < width; x++) {\n        const colorIndex = colorIndexes[localOffset + x];\n        const index = (globalOffset + x) * 4;\n        if (colorIndex !== transparentIndex) {\n          const [r, g, b] = palette?.[colorIndex] ?? [0, 0, 0];\n          pixels[index] = r;\n          pixels[index + 1] = g;\n          pixels[index + 2] = b;\n          pixels[index + 3] = 255;\n        }\n      }\n    }\n    if (hasDisposal3 && disposal !== 1 && disposal !== 3) {\n      previousPixels = pixels.slice();\n    }\n    previousFrame = frame;\n    return {\n      width: globalWidth,\n      height: globalHeight,\n      delay,\n      data: pixels.slice()\n    };\n  });\n}\n\nfunction decodeFrame(source, index, gif) {\n  const frames = decodeFrames(source, {\n    gif,\n    range: [0, Math.max(index, 0)]\n  });\n  return frames.pop();\n}\n\nfunction decodeUndisposedFrame(source, gif, index) {\n  const array = resovleSource(source, \"uint8Array\");\n  const {\n    frames,\n    colorTable: globalColorTable\n  } = gif;\n  const frame = frames[index];\n  if (!frame) {\n    throw new Error(`This index ${index} does not exist in frames`);\n  }\n  const {\n    width,\n    height,\n    delay,\n    interlaced,\n    localColorTable,\n    colorTable,\n    lzwMinCodeSize,\n    dataPositions,\n    graphicControl\n  } = frame;\n  const {\n    transparent,\n    transparentIndex: transparentIndex_\n  } = graphicControl ?? {};\n  const palette = localColorTable ? colorTable : globalColorTable;\n  const transparentIndex = transparent ? transparentIndex_ : -1;\n  const compressedData = mergeBuffers(\n    dataPositions.map(\n      ([begin, length]) => array.subarray(begin, begin + length)\n    )\n  );\n  let colorIndexes = lzwDecode(lzwMinCodeSize, compressedData, width * height);\n  if (interlaced) {\n    colorIndexes = deinterlace(colorIndexes, width);\n  }\n  const data = new Uint8ClampedArray(width * height * 4);\n  for (let len = colorIndexes.length, i = 0; i < len; i++) {\n    const colorIndex = colorIndexes[i];\n    if (colorIndex === transparentIndex)\n      continue;\n    const [r, g, b] = palette?.[colorIndex] ?? [0, 0, 0];\n    const index2 = i * 4;\n    data[index2] = r;\n    data[index2 + 1] = g;\n    data[index2 + 2] = b;\n    data[index2 + 3] = 255;\n  }\n  return {\n    width,\n    height,\n    delay,\n    data\n  };\n}\n\nclass Logger {\n  constructor(isDebug = true) {\n    this.isDebug = isDebug;\n  }\n  static prefix = \"[modern-gif]\";\n  time(label) {\n    if (!this.isDebug)\n      return;\n    console.time(`${Logger.prefix} ${label}`);\n  }\n  timeEnd(label) {\n    if (!this.isDebug)\n      return;\n    console.timeEnd(`${Logger.prefix} ${label}`);\n  }\n  debug(...args) {\n    if (!this.isDebug)\n      return;\n    console.debug(Logger.prefix, ...args);\n  }\n  warn(...args) {\n    if (!this.isDebug)\n      return;\n    console.warn(Logger.prefix, ...args);\n  }\n}\n\nclass CropIndexedFrame {\n  constructor(_config) {\n    this._config = _config;\n  }\n  _rsControler;\n  _frames = [];\n  readable = new ReadableStream({\n    start: (controler) => this._rsControler = controler\n  });\n  writable = new WritableStream({\n    write: (frame) => {\n      this._frames.push(frame);\n    },\n    close: () => {\n      const transparentIndex = this._config.backgroundColorIndex;\n      let lastIndexes;\n      this._frames.forEach((frame, index) => {\n        const {\n          width = 1,\n          height = 1,\n          data: indexes\n        } = frame;\n        const transparent = frame.transparent || (this._frames[index + 1]?.transparent ?? true);\n        let left = 0;\n        let top = 0;\n        let right = width - 1;\n        let bottom = height - 1;\n        let prevIndexes;\n        if (transparent) {\n          while (top < bottom) {\n            let isTrans = true;\n            for (let x = 0; x < width; x++) {\n              if (indexes[width * top + x] !== transparentIndex) {\n                isTrans = false;\n                break;\n              }\n            }\n            if (!isTrans)\n              break;\n            top++;\n          }\n          while (bottom > top) {\n            let isTrans = true;\n            for (let x = 0; x < width; x++) {\n              if (indexes[width * bottom + x] !== transparentIndex) {\n                isTrans = false;\n                break;\n              }\n            }\n            if (!isTrans)\n              break;\n            bottom--;\n          }\n          while (left < right) {\n            let isTrans = true;\n            for (let y = top; y < bottom; y++) {\n              if (indexes[width * y + left] !== transparentIndex) {\n                isTrans = false;\n                break;\n              }\n            }\n            if (!isTrans)\n              break;\n            left++;\n          }\n          while (right > left) {\n            let isTrans = true;\n            for (let y = top; y < bottom; y++) {\n              if (indexes[width * y + right] !== transparentIndex) {\n                isTrans = false;\n                break;\n              }\n            }\n            if (!isTrans)\n              break;\n            right--;\n          }\n        } else {\n          if (lastIndexes) {\n            while (top < bottom) {\n              let sameLine = true;\n              for (let x = 0; x < width; x++) {\n                const index2 = width * top + x;\n                if (indexes[index2] !== lastIndexes[index2]) {\n                  sameLine = false;\n                  break;\n                }\n              }\n              if (!sameLine)\n                break;\n              top++;\n            }\n            while (bottom > top) {\n              let sameLine = true;\n              for (let x = 0; x < width; x++) {\n                const index2 = width * bottom + x;\n                if (indexes[index2] !== lastIndexes[index2]) {\n                  sameLine = false;\n                  break;\n                }\n              }\n              if (!sameLine)\n                break;\n              bottom--;\n            }\n            if (top === bottom) {\n              left = right;\n            } else {\n              while (left < right) {\n                let sameColumn = true;\n                for (let y = top; y <= bottom; y++) {\n                  const index2 = y * width + left;\n                  if (indexes[index2] !== lastIndexes[index2]) {\n                    sameColumn = false;\n                    break;\n                  }\n                }\n                if (!sameColumn)\n                  break;\n                left++;\n              }\n              while (right > left) {\n                let sameColumn = true;\n                for (let y = top; y <= bottom; y++) {\n                  const index2 = y * width + right;\n                  if (indexes[index2] !== lastIndexes[index2]) {\n                    sameColumn = false;\n                    break;\n                  }\n                }\n                if (!sameColumn)\n                  break;\n                right--;\n              }\n            }\n          }\n          prevIndexes = lastIndexes;\n          lastIndexes = indexes;\n        }\n        const newWidth = right + 1 - left;\n        const newHeight = bottom + 1 - top;\n        const croppedIndexes = new Uint8ClampedArray(newWidth * newHeight);\n        for (let y = 0; y < newHeight; y++) {\n          for (let x = 0; x < newWidth; x++) {\n            const index2 = y * newWidth + x;\n            const rawIndex = (top + y) * width + (left + x);\n            if (!transparent && prevIndexes && indexes[rawIndex] === prevIndexes[rawIndex]) {\n              croppedIndexes[index2] = transparentIndex;\n              continue;\n            }\n            croppedIndexes[index2] = indexes[rawIndex];\n          }\n        }\n        this._rsControler.enqueue({\n          ...frame,\n          left,\n          top,\n          width: newWidth,\n          height: newHeight,\n          disposal: transparent ? 2 : 1,\n          data: croppedIndexes,\n          graphicControl: {\n            ...frame.graphicControl,\n            transparent: true,\n            transparentIndex\n          }\n        });\n      });\n      this._rsControler.close();\n    }\n  });\n}\n\nclass Writer {\n  constructor(_chunkByteLength = 4096) {\n    this._chunkByteLength = _chunkByteLength;\n    this._chunks = [this._createChunk()];\n  }\n  _chunks;\n  _chunkIndex = 0;\n  _chunkOffset = 0;\n  get cursor() {\n    return [this._chunkIndex, this._chunkOffset];\n  }\n  _createChunk() {\n    return new DataView(new ArrayBuffer(this._chunkByteLength));\n  }\n  writeByte(val, cursor) {\n    if (cursor) {\n      this._chunks[cursor[0]].setUint8(cursor[1], val);\n    } else {\n      if (this._chunkOffset >= this._chunkByteLength) {\n        this._chunks[++this._chunkIndex] = this._createChunk();\n        this._chunkOffset = 0;\n      }\n      this._chunks[this._chunkIndex].setUint8(this._chunkOffset++, val);\n    }\n  }\n  writeBytes(value) {\n    value.forEach((val) => this.writeByte(val));\n  }\n  writeString(value) {\n    value.split(\"\").forEach((char) => {\n      this.writeByte(char.charCodeAt(0));\n    });\n  }\n  writeUnsigned(value) {\n    this.writeBytes([value & 255, value >> 8 & 255]);\n  }\n  calculateDistance(cursor) {\n    return this._chunkIndex * this._chunkByteLength + this._chunkOffset - (cursor[0] * this._chunkByteLength + cursor[1]);\n  }\n  toUint8Array() {\n    this._chunks[this._chunkIndex] = new DataView(this._chunks[this._chunkIndex].buffer.slice(0, this._chunkOffset));\n    const data = new Uint8Array(this._chunks.reduce((total, chunk) => total + chunk.byteLength, 0));\n    let offset = 0;\n    this._chunks.forEach((chunk) => {\n      data.set(new Uint8Array(chunk.buffer), offset);\n      offset += chunk.byteLength;\n    });\n    this._chunks = [this._createChunk()];\n    this._chunkIndex = 0;\n    this._chunkOffset = 0;\n    return data;\n  }\n}\n\nclass EncodeGif {\n  constructor(_config) {\n    this._config = _config;\n  }\n  _rsControler;\n  _frames = [];\n  readable = new ReadableStream({\n    start: (controler) => this._rsControler = controler\n  });\n  writable = new WritableStream({\n    write: (frame) => {\n      this._frames.push(frame);\n    },\n    close: () => {\n      const header = this._encodeHeader();\n      const body = mergeBuffers(this._frames);\n      const output = new Uint8Array(header.length + body.byteLength + 1);\n      output.set(header);\n      output.set(body, header.byteLength);\n      output[output.length - 1] = TRAILER;\n      this._rsControler.enqueue(output);\n      this._rsControler.close();\n      this._frames.length = 0;\n    }\n  });\n  _encodeHeader() {\n    const gif = {\n      version: \"89a\",\n      looped: true,\n      loopCount: 0,\n      pixelAspectRatio: 0,\n      ...this._config\n    };\n    if (gif.width <= 0 || gif.width > 65535)\n      throw new Error(\"Width invalid.\");\n    if (gif.height <= 0 || gif.height > 65535)\n      throw new Error(\"Height invalid.\");\n    let colorTableSize = 0;\n    if (gif.colorTable?.length) {\n      let colorTableLength = gif.colorTable.length;\n      if (colorTableLength < 2 || colorTableLength > 256 || colorTableLength & colorTableLength - 1) {\n        throw new Error(\"Invalid color table length, must be power of 2 and 2 .. 256.\");\n      }\n      while (colorTableLength >>= 1) ++colorTableSize;\n      colorTableLength = 1 << colorTableSize;\n      gif.colorTableSize = --colorTableSize;\n      if (gif.backgroundColorIndex >= colorTableLength) {\n        throw new Error(\"Background index out of range.\");\n      }\n      if (gif.backgroundColorIndex === 0) {\n        throw new Error(\"Background index explicitly passed as 0.\");\n      }\n    }\n    const writer = new Writer();\n    writer.writeString(SIGNATURE);\n    writer.writeString(gif.version);\n    writer.writeUnsigned(gif.width);\n    writer.writeUnsigned(gif.height);\n    writer.writeByte(Number.parseInt(`${gif.colorTableSize ? 1 : 0}1110${gif.colorTableSize.toString(2).padStart(3, \"0\")}`, 2));\n    writer.writeByte(gif.backgroundColorIndex);\n    writer.writeByte(gif.pixelAspectRatio);\n    writer.writeBytes(gif.colorTable?.flat() ?? []);\n    if (gif.looped) {\n      writer.writeByte(EXTENSION);\n      writer.writeByte(EXTENSION_APPLICATION);\n      writer.writeByte(EXTENSION_APPLICATION_BLOCK_SIZE);\n      writer.writeString(\"NETSCAPE2.0\");\n      writer.writeByte(3);\n      writer.writeByte(1);\n      writer.writeUnsigned(gif.loopCount);\n      writer.writeByte(0);\n    }\n    return writer.toUint8Array();\n  }\n}\n\nfunction lzwEncode(minCodeSize, data, writer) {\n  writer.writeByte(minCodeSize);\n  let curSubblock = writer.cursor;\n  writer.writeByte(0);\n  const clearCode = 1 << minCodeSize;\n  const codeMask = clearCode - 1;\n  const eoiCode = clearCode + 1;\n  let nextCode = eoiCode + 1;\n  let curCodeSize = minCodeSize + 1;\n  let curShift = 0;\n  let cur = 0;\n  function emitBytesToBuffer(bitBlockSize) {\n    while (curShift >= bitBlockSize) {\n      writer.writeByte(cur & 255);\n      cur >>= 8;\n      curShift -= 8;\n      if (writer.calculateDistance(curSubblock) === 256) {\n        writer.writeByte(255, curSubblock);\n        curSubblock = writer.cursor;\n        writer.writeByte(0);\n      }\n    }\n  }\n  function emitCode(c) {\n    cur |= c << curShift;\n    curShift += curCodeSize;\n    emitBytesToBuffer(8);\n  }\n  let ibCode = data[0] & codeMask;\n  let codeTable = {};\n  let curKey;\n  let curCode;\n  let k;\n  emitCode(clearCode);\n  for (let len = data.length, i = 1; i < len; ++i) {\n    k = data[i] & codeMask;\n    curKey = ibCode << 8 | k;\n    curCode = codeTable[curKey];\n    if (curCode === void 0) {\n      cur |= ibCode << curShift;\n      curShift += curCodeSize;\n      while (curShift >= 8) {\n        writer.writeByte(cur & 255);\n        cur >>= 8;\n        curShift -= 8;\n        if (writer.calculateDistance(curSubblock) === 256) {\n          writer.writeByte(255, curSubblock);\n          curSubblock = writer.cursor;\n          writer.writeByte(0);\n        }\n      }\n      if (nextCode === 4096) {\n        emitCode(clearCode);\n        nextCode = eoiCode + 1;\n        curCodeSize = minCodeSize + 1;\n        codeTable = {};\n      } else {\n        if (nextCode >= 1 << curCodeSize)\n          ++curCodeSize;\n        codeTable[curKey] = nextCode++;\n      }\n      ibCode = k;\n    } else {\n      ibCode = curCode;\n    }\n  }\n  emitCode(ibCode);\n  emitCode(eoiCode);\n  emitBytesToBuffer(1);\n  if (writer.calculateDistance(curSubblock) === 1) {\n    writer.writeByte(0, curSubblock);\n  } else {\n    writer.writeByte(writer.calculateDistance(curSubblock) - 1, curSubblock);\n    writer.writeByte(0);\n  }\n}\n\nclass EncodeIndexdFrame {\n  constructor(_config) {\n    this._config = _config;\n  }\n  _rsControler;\n  readable = new ReadableStream({\n    start: (controler) => this._rsControler = controler\n  });\n  writable = new WritableStream({\n    write: (frame) => {\n      const writer = new Writer();\n      const {\n        left = 0,\n        top = 0,\n        width = 0,\n        height = 0,\n        delay = 100,\n        colorTable\n      } = frame;\n      let {\n        disposal = 0\n      } = frame;\n      const transparent = frame.graphicControl?.transparent;\n      let transparentIndex = frame.graphicControl?.transparentIndex ?? 255;\n      if (left < 0 || left > 65535)\n        throw new Error(\"Left invalid.\");\n      if (top < 0 || top > 65535)\n        throw new Error(\"Top invalid.\");\n      if (width <= 0 || width > 65535)\n        throw new Error(\"Width invalid.\");\n      if (height <= 0 || height > 65535)\n        throw new Error(\"Height invalid.\");\n      let minCodeSize = 8;\n      let colorTableLength = colorTable ? colorTable.length : 0;\n      if (colorTableLength) {\n        if (colorTableLength < 2 || colorTableLength > 256 || colorTableLength & colorTableLength - 1) {\n          throw new Error(\"Invalid color table length, must be power of 2 and 2 .. 256.\");\n        }\n        while (colorTableLength >>= 1) ++minCodeSize;\n      }\n      writer.writeByte(EXTENSION);\n      writer.writeByte(EXTENSION_GRAPHIC_CONTROL);\n      writer.writeByte(EXTENSION_GRAPHIC_CONTROL_BLOCK_SIZE);\n      if (transparent) {\n        if (!disposal) {\n          disposal = 2;\n        }\n      } else {\n        transparentIndex = 0;\n      }\n      writer.writeByte(Number.parseInt(`000${Number(disposal & 7).toString(2).padStart(3, \"0\")}0${transparent ? 1 : 0}`, 2));\n      writer.writeUnsigned(delay / 10);\n      writer.writeByte(transparentIndex);\n      writer.writeByte(0);\n      writer.writeByte(IMAGE_DESCRIPTOR);\n      writer.writeUnsigned(left);\n      writer.writeUnsigned(top);\n      writer.writeUnsigned(width);\n      writer.writeUnsigned(height);\n      if (colorTable?.length) {\n        writer.writeByte(Number.parseInt(`10000${(minCodeSize - 1).toString(2).padStart(3, \"0\")}`, 2));\n        writer.writeBytes(colorTable.flat());\n      } else {\n        writer.writeByte(0);\n      }\n      lzwEncode(minCodeSize, frame.data, writer);\n      this._rsControler.enqueue(writer.toUint8Array());\n    },\n    close: () => this._rsControler.close()\n  });\n}\n\nclass FrameToIndexedFrame {\n  constructor(_config, colors) {\n    this._config = _config;\n    this._finder = new Finder(colors, _config.premultipliedAlpha, _config.tint);\n  }\n  _rsControler;\n  _finder;\n  readable = new ReadableStream({\n    start: (controler) => this._rsControler = controler\n  });\n  writable = new WritableStream({\n    write: (frame) => {\n      const transparentIndex = this._config.backgroundColorIndex;\n      const pixels = frame.data;\n      let transparent = false;\n      const indexes = new Uint8ClampedArray(pixels.length / 4);\n      for (let len = pixels.length, i = 0; i < len; i += 4) {\n        if (pixels[i + 3] === 0) {\n          indexes[i / 4] = transparentIndex;\n          transparent = true;\n        } else {\n          indexes[i / 4] = this._finder.findNearestIndex(\n            pixels[i],\n            pixels[i + 1],\n            pixels[i + 2],\n            pixels[i + 3]\n          );\n        }\n      }\n      this._rsControler.enqueue({\n        ...frame,\n        data: indexes,\n        transparent\n      });\n    },\n    close: () => {\n      this._rsControler.close();\n    }\n  });\n}\n\nclass Encoder {\n  _logger;\n  _palette;\n  _config;\n  _encodingFrames = [];\n  _encodeUUID = 0;\n  _worker;\n  constructor(options) {\n    this._logger = new Logger(Boolean(options.debug));\n    this._config = this._resolveOptions(options);\n    this._palette = new Palette({\n      maxColors: this._config.maxColors,\n      premultipliedAlpha: this._config.premultipliedAlpha,\n      tint: this._config.tint\n    });\n    if (this._config.workerUrl) {\n      this._worker = createWorker({ workerUrl: this._config.workerUrl });\n      this._worker.call(\"encoder:init\", options);\n    } else {\n      this._config.frames?.forEach((frame) => this.encode(frame));\n    }\n  }\n  _resolveOptions(options) {\n    [\"width\", \"height\"].forEach((key) => {\n      if (typeof options[key] !== \"undefined\" && Math.floor(options[key]) !== options[key]) {\n        console.warn(`${key} cannot be a floating point number`);\n        options[key] = Math.floor(options[key]);\n      }\n    });\n    const {\n      colorTableSize = 256,\n      backgroundColorIndex = colorTableSize - 1,\n      maxColors = colorTableSize - 1,\n      premultipliedAlpha = false,\n      tint = [255, 255, 255]\n    } = options;\n    return {\n      ...options,\n      colorTableSize,\n      backgroundColorIndex,\n      maxColors,\n      premultipliedAlpha,\n      tint\n    };\n  }\n  async encode(frame) {\n    if (this._worker) {\n      let transfer;\n      if (ArrayBuffer.isView(frame.data)) {\n        transfer = [frame.data.buffer];\n      } else if (frame.data instanceof ArrayBuffer) {\n        transfer = [frame.data];\n      }\n      return this._worker.call(\"encoder:encode\", frame, transfer);\n    }\n    const id = this._encodeUUID;\n    this._encodeUUID++;\n    const {\n      width: frameWidth = this._config.width,\n      height: frameHeight = this._config.height\n    } = frame;\n    let { data } = frame;\n    try {\n      this._logger.time(`palette:sample-${id}`);\n      data = typeof data === \"string\" ? await loadImage(data) : data;\n      data = resovleSource(data, \"uint8ClampedArray\", {\n        width: frameWidth,\n        height: frameHeight\n      });\n      this._encodingFrames.push({\n        ...frame,\n        width: frameWidth,\n        height: frameHeight,\n        data\n      });\n      this._palette.addSample(data);\n    } finally {\n      this._logger.timeEnd(`palette:sample-${id}`);\n    }\n  }\n  async flush(format) {\n    if (this._worker) {\n      return this._worker.call(\"encoder:flush\", format);\n    }\n    this._logger.time(\"palette:generate\");\n    const colors = await this._palette.generate();\n    this._logger.timeEnd(\"palette:generate\");\n    const colorTable = colors.map((color) => [color.rgb.r, color.rgb.g, color.rgb.b]);\n    while (colorTable.length < this._config.colorTableSize) {\n      colorTable.push([0, 0, 0]);\n    }\n    this._logger.debug(\"palette:maxColors\", this._config.maxColors);\n    this._logger.isDebug && console.debug(\n      colors.map(() => \"%c \").join(\"\"),\n      ...colors.map((color) => `margin: 1px; background: ${color.hex}`)\n    );\n    this._logger.time(\"encode\");\n    const output = await new Promise((resolve) => {\n      new ReadableStream({\n        start: (controller) => {\n          this._encodingFrames.forEach((frame) => {\n            controller.enqueue(frame);\n          });\n          controller.close();\n        }\n      }).pipeThrough(new FrameToIndexedFrame(this._config, colors)).pipeThrough(new CropIndexedFrame(this._config)).pipeThrough(new EncodeIndexdFrame(this._config)).pipeThrough(new EncodeGif({ ...this._config, colorTable })).pipeTo(new WritableStream({ write: (chunk) => resolve(chunk) }));\n    });\n    this._logger.timeEnd(\"encode\");\n    this._encodingFrames = [];\n    this._encodeUUID = 0;\n    switch (format) {\n      case \"blob\":\n        return new Blob([output.buffer], { type: \"image/gif\" });\n      case \"arrayBuffer\":\n      default:\n        return output.buffer;\n    }\n  }\n}\n\nfunction encode(options) {\n  return new Encoder(options).flush(options.format);\n}\n\nexport { Encoder, decode, decodeFrame, decodeFrames, decodeUndisposedFrame, encode };\n","import { captureState, getSVGDimensions } from './svgcap.js'\nimport { encode } from 'modern-gif'\n\nconst FPS = 30\nconst DURATION = 10\n\nexport default async (svg, onProgress) => {\n  const userSpeed = Number(document.getElementById('speed')?.value) || 5\n  const cyclesPerSecond = userSpeed / 10\n  const totalFrames = FPS * DURATION\n  const { width, height } = getSVGDimensions(svg)\n  const w = Math.floor(width)\n  const h = Math.floor(height)\n  const delays = 1000 / FPS\n  const indices = Array.from({ length: totalFrames }, (_, i) => i)\n  const canvases = []\n  await indices.reduce(\n    (p, i) => p.then(async () => {\n      const t = i / totalFrames\n      const animProgress = (t * DURATION * cyclesPerSecond) % 1\n      onProgress?.(i / totalFrames)\n      const canvas = await captureState(svg, animProgress)\n      canvases.push(canvas)\n    }),\n    Promise.resolve()\n  )\n  const frames = canvases.map(canvas => ({\n    data: canvas,\n    delay: delays\n  }))\n  const output = await encode({\n    width: w,\n    height: h,\n    frames,\n    maxColors: 255,\n    premultipliedAlpha: false,\n    debug: false\n  })\n  return new Blob([output], { type: 'image/gif' })\n}\n","import encodeWebm from './webm.js'\nimport encodeGif from './gif.js'\nimport { captureState } from './svgcap.js'\n\nconst createDownloadURL = blob => URL.createObjectURL(blob)\n\nconst capturePNG = async (svg, progress) => {\n  progress(1)\n  const canvas = await captureState(svg, Math.random()) // 0.5 = ambil di pertengahan animasi\n  return new Promise(resolve => {\n    canvas.toBlob(blob => {\n      resolve(blob)\n    }, 'image/png')\n  })\n}\n\nconst triggerDownload = (url, ext) => {\n  const a = document.createElement('a')\n  a.href = url\n  a.download = `glitch_${~~performance.now()}.${ext}`\n  a.click()\n  URL.revokeObjectURL(url)\n}\n\nconst formatters = {\n  percentage: progress => `${(progress * 100).toFixed()}%`,\n  timer: seconds => `${seconds.toFixed(1)}s`\n}\n\nconst createProgressStrategy = (btn) => ({\n  percentage: () => {\n    const update = progress => {\n      btn.textContent = formatters.percentage(progress)\n    }\n    return { update, cleanup: () => { } }\n  },\n  timer: () => {\n    let time = 0\n    const intervalId = setInterval(() => {\n      time += 0.1\n      btn.textContent = formatters.timer(time)\n    }, 100)\n    return {\n      update: () => { }, // No-op for timer strategy\n      cleanup: () => clearInterval(intervalId)\n    }\n  }\n})\n\nconst withLoadingState = async (btn, action, progressType = 'percentage') => {\n  const origText = btn.textContent\n  btn.disabled = true\n\n  const strategy = createProgressStrategy(btn)[progressType]()\n\n  try {\n    return await action(strategy.update)\n  } catch (err) {\n    console.error(`${btn.id} capture failed:`, err)\n    return null\n  } finally {\n    strategy.cleanup()\n    btn.disabled = false\n    btn.textContent = origText\n    console.log('blur')\n    btn.blur()\n  }\n}\n\nconst captureSVG = (svg, progress) => {\n  progress(1)\n  return Promise.resolve(\n    new Blob([new XMLSerializer().serializeToString(svg)], {\n      type: 'image/svg+xml;charset=utf-8'\n    })\n  )\n}\n\nconst createDownloader = (captureFunc, ext, progressType = 'percentage') => async (svg, btn) => {\n  const blob = await withLoadingState(btn, progress => captureFunc(svg, progress), progressType)\n  blob && triggerDownload(createDownloadURL(blob), ext)\n}\n\nexport const downloader = {\n  svg: createDownloader(captureSVG, 'svg'),\n  png: createDownloader(capturePNG, 'png'),\n  webm: createDownloader(encodeWebm, 'webm'),\n  gif: createDownloader(encodeGif, 'gif', 'timer')\n}","const colorMatrices = {\n  red: '1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0',\n  green: '0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0',\n  blue: '0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0',\n}\n\nconst createKeyTimes = (steps = 8) =>\n  [\n    0,\n    ...Array.from({ length: steps - 2 }, () => (Math.random() * 0.92 + 0.08).toFixed(4)).sort(\n      (a, b) => a - b,\n    ),\n    1,\n  ].join(';')\n\nconst createValues = (max, steps = 8) =>\n  Array.from({ length: steps }, () => (Math.random() * (max - 0.001) + 0.001).toFixed(4)).join(';')\n\nconst createSlice = (i, y, height, duration, intensity) => {\n  const values = createValues(intensity)\n  const keyTimes = createKeyTimes()\n  return `\n       <feOffset in=\"blended\" dx=\"0\" dy=\"0\" y=\"${y}%\" height=\"${height}%\" result=\"slice_${i}\">\n         <animate attributeName=\"dx\" keyTimes=\"${keyTimes}\" values=\"${values}\" \n                  begin=\"0s\" dur=\"${duration}s\" calcMode=\"discrete\" repeatCount=\"indefinite\" fill=\"freeze\" />\n         <animate attributeName=\"dy\" keyTimes=\"${keyTimes}\" values=\"${values}\" \n                  begin=\"0s\" dur=\"${duration}s\" calcMode=\"discrete\" repeatCount=\"indefinite\" fill=\"freeze\" />\n       </feOffset>\n  `\n}\n\nconst measureText = (text) => {\n  const span = Object.assign(document.createElement('span'), {\n    style: `\n      font-family: monospace, serif;\n      font-weight: bolder;\n      font-size: 24px;\n      visibility: hidden;\n      position: absolute;\n      white-space: nowrap;\n      letter-spacing: 0.1em;\n    `,\n    textContent: text,\n  })\n  document.body.appendChild(span)\n  const width = span.getBoundingClientRect().width\n  document.body.removeChild(span)\n  return width\n}\n\nconst calculateDimensions = (text) => {\n  const textWidth = measureText(text)\n\n  const padding = textWidth * 0.02\n  const width = textWidth + padding * 2\n\n  const scale = 2.5\n\n  return {\n    width: Math.max(50, width) * scale,\n    height: 48 * scale,\n    fontSize: 26 * scale,\n  }\n}\n\nconst calculateSliceDurations = (speed, normalizedHeights) => {\n  const baseDuration =\n    speed < 3 ? 300 - speed * 80 : speed < 7 ? 60 * 0.3 ** (speed - 3) : 20 * 0.2 ** (speed - 7)\n\n  return normalizedHeights.map((height) => {\n    const variation = (1 + height / 100) * (0.8 + Math.random() * 0.4)\n    return Math.max(0.05, (baseDuration * variation).toFixed(4))\n  })\n}\n\nexport default (input, params) => {\n  const isImg = !!input.img\n  const text = input.text\n  const img = input.img\n  const { speed, intensity, colorSep, heightVariation } = params\n\n  // For text, measure and size as before\n  // For image, use provided or fallback size\n  const dims = isImg\n    ? {\n        width: input.imgWidth || 420,\n        height: input.imgHeight || 120,\n        fontSize: 0\n      }\n    : calculateDimensions(text)\n  const { width, height, fontSize } = dims\n\n  const sliceHeights = Array.from({ length: 8 }, () =>\n    Math.floor(Math.random() * (6 + heightVariation * 2 - 6) + 6),\n  )\n  const totalHeight = sliceHeights.reduce((sum, h) => sum + h, 0)\n  const normalizedHeights = sliceHeights.map((h) =>\n    Math.max(6, Math.round((h / totalHeight) * 100)),\n  )\n  const currentTotal = normalizedHeights.reduce((sum, h) => sum + h, 0)\n  normalizedHeights[normalizedHeights.length - 1] += 100 - currentTotal\n  const sliceYs = normalizedHeights.map((_, i) =>\n    normalizedHeights.slice(0, i).reduce((sum, h) => sum + h, 0),\n  )\n  const sliceDurations = calculateSliceDurations(speed, normalizedHeights)\n  const slices = normalizedHeights.map((height, i) =>\n    createSlice(i, sliceYs[i], height, sliceDurations[i], intensity),\n  )\n  const colorMatrix = (channel) => `      <feColorMatrix \n  in=\"SourceGraphic\" result=\"${channel}\" type=\"matrix\" values=\"${colorMatrices[channel]}\" /> `\n  const colorOffset = (channel, dx, dur) => {\n    const keyTimes = createKeyTimes()\n    const values = createValues(colorSep)\n    return `\n      <feOffset in=\"${channel}\" result=\"${channel}-shifted\" dx=\"${dx}\" dy=\"0\">\n        <animate attributeName=\"dx\" keyTimes=\"${keyTimes}\" values=\"${values}\" \n                 begin=\"0\" dur=\"${dur}s\" calcMode=\"discrete\" repeatCount=\"indefinite\" fill=\"freeze\" />\n        <animate attributeName=\"dy\" keyTimes=\"${keyTimes}\" values=\"${values}\" \n               begin=\"0\" dur=\"${dur}s\" calcMode=\"discrete\" repeatCount=\"indefinite\" fill=\"freeze\" />\n      </feOffset>\n    `\n  }\n  return `<svg xmlns=\"http://www.w3.org/2000/svg\" \n            width=\"${Math.round(width)}px\" \n            height=\"${height}px\" \n            viewBox=\"0 0 ${Math.round(width)} ${height}\">\n  <!-- made with glitcher-app v${import.meta.env.VERSION} -->\n  <!-- https://github.com/metaory/glitcher-app -->\n  <!-- MIT License (c) 2025 metaory -->\n  ${\n    isImg\n      ? `<image href=\"${img}\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" filter=\"url(#glitch)\" style=\"image-rendering:pixelated;\" />`\n      : `<text\n    filter=\"url(#glitch)\" \n    fill=\"#FFFFFF\" \n    font-family=\"monospace, sans-serif\"\n    font-weight=\"bolder\" \n    font-size=\"${fontSize}\" \n    text-anchor=\"middle\" \n    dominant-baseline=\"middle\" \n    stroke=\"#FFFFFF\"\n    stroke-width=\"2\"\n    x=\"48%\" \n    y=\"50%\"\n  >${text}</text>`\n  }\n  <defs>\n    <filter id=\"glitch\" primitiveUnits=\"objectBoundingBox\" x=\"-10%\" y=\"0%\" width=\"120%\" height=\"100%\">\n${Object.keys(colorMatrices).map(colorMatrix).join('\\n')}\n       ${colorOffset('red', -0.01, speed)}\n       ${colorOffset('blue', 0.01, speed * 1.1)}\n       <feBlend mode=\"screen\" in=\"red-shifted\" in2=\"green\" result=\"red-green\" />\n       <feBlend mode=\"screen\" in=\"red-green\" in2=\"blue-shifted\" result=\"blended\" />\n       ${slices.join('')}\n      <feMerge>\n        ${slices.map((_, i) => `<feMergeNode in=\"slice_${i}\" />`).join('')}\n      </feMerge>\n    </filter>\n  </defs>\n</svg>\n  `.replace(/\\n\\s*\\n/g, '\\n')\n}\n\n// font-family=\"Arial Black, Impact, Arial, monospace, system-ui\"\n","import '@fontsource/bungee'\nimport '@fontsource/libre-barcode-128-text'\nimport gradientGL from 'gradient-gl'\nimport { downloader } from './save.js'\nimport createGlitchEffect from './glitch.js'\nimport './style.css'\nimport { createCanvas } from './svgcap.js'\n\ngradientGL('a2.af4a')\n\nconst $ = document.getElementById.bind(document)\nconst query = document.querySelector.bind(document)\nconst parse = Number.parseFloat\n\nconst updateValue = (e) => {\n  const span = e.target.previousElementSibling?.querySelector('span')\n  if (span) span.textContent = e.target.value\n}\n\nconst getText = () => $('textInput').value || 'ḠĿ𐪌𐌕ꛕⵤM꠵'\nconst getParams = () => ({\n  speed: parse($('speed').value),\n  intensity: parse($('intensity').value),\n  colorSep: parse($('colorSep').value),\n  heightVariation: parse($('slices').value),\n})\n\nconst state = new Proxy({ img: null }, {\n  set(obj, prop, val) {\n    obj[prop] = val\n    updatePreview()\n    return true\n  }\n})\n\nconst downscale = (file, maxDim = 512) => new Promise(res => {\n  const img = new window.Image()\n  img.onload = () => {\n    const scale = Math.min(1, maxDim / Math.max(img.width, img.height))\n    const w = Math.round(img.width * scale)\n    const h = Math.round(img.height * scale)\n    const canvas = createCanvas({ width: w, height: h })\n    canvas.getContext('2d').drawImage(img, 0, 0, w, h)\n    res({ dataUrl: canvas.toDataURL('image/png'), width: w, height: h })\n  }\n  img.src = URL.createObjectURL(file)\n})\n\n$('imgInput').onchange = e => {\n  const file = e.target.files[0]\n  if (file) {\n    downscale(file, 512).then(({ dataUrl, width, height }) => {\n      state.img = dataUrl\n      state.imgWidth = width\n      state.imgHeight = height\n    })\n  } else {\n    state.img = null\n    state.imgWidth = null\n    state.imgHeight = null\n  }\n  $('textInput').value = ''\n}\n\n$('textInput').addEventListener('input', e => {\n  if (state.img) state.img = null\n})\n\nconst renderImage = src => `<img src=\"${src}\" alt=\"glitch-img\" style=\"max-width:100%;max-height:320px;border-radius:1.2em;border:4px solid #fc4a;\" />`\n\nconst updatePreview = (e) => {\n  if (e?.target?.type === 'range') {\n    updateValue(e)\n    $('textInput').blur()\n  }\n  const isImg = !!state.img\n  $('preview').innerHTML = createGlitchEffect({\n    text: isImg ? '' : getText(),\n    img: state.img || null,\n    imgWidth: isImg ? state.imgWidth : undefined,\n    imgHeight: isImg ? state.imgHeight : undefined\n  }, getParams())\n}\n\nconst updateRangeLabels = () => {\n  for (const input of document.querySelectorAll('input[type=\"range\"]')) {\n    const label = document.createElement('div')\n    label.className = 'range-label'\n    label.textContent = `${input.title}: ${input.value}`\n    input.parentNode.insertBefore(label, input)\n  }\n}\n\nfor (const id of ['textInput', 'speed', 'intensity', 'colorSep', 'slices']) {\n  $(id).addEventListener('input', updatePreview)\n}\n\nconst setupDownloaders = (ext) => {\n  const btn = $(`download-${ext}`)\n  btn.onclick = () => downloader[ext](query('#preview svg'), btn)\n}\n\n  ;['webm', 'svg', 'png', 'gif'].forEach(setupDownloaders)\n\n$('version').textContent = `v1.1.0`\n\nupdatePreview()\n"],"names":["common","a1","a2","b1","b2","b3","b4","b5","f1","f2","f3","n1","n2","shaders","createCanvas","selector","target","normalize","v","value","nonLinearMap","val","minOut","maxOut","power","parseSeed","s","vertex","GradientGL","#gl","#canvas","#program","#uniforms","#timeScale","#isActive","#externalUniforms","#currentSeed","#currentUniformValues","#fragment","#vertex","canvas","fragment","seed","#setupEventHandlers","#createGLContext","#createProgram","#getUniformLocations","#setupBuffers","#setupAttributes","#updateExternalUniforms","#render","gl","#createShader","type","source","shader","log","vertexSource","fragmentSource","program","vertexShader","fragmentShader","positionBuffer","positionLocation","forceUpdate","speedVal","hueVal","satVal","lightVal","speed","hueShift","satFactor","lightFactor","i","#updateInternalUniforms","time","iResolution","iTime","iFrame","displayWidth","displayHeight","frame","fetchCommon","fetchShader","main","activeProgram","gradientGL","parsedSeed","shaderId","getSVGDimensions","svg","width","height","updateAnimationState","svgCopy","anim","values","targetValue","svgToImage","resolve","reject","blob","url","img","fallback","captureState","ctx","CONFIG","msg","args","initRecorder","stream","recorder","chunks","e","encodeWebm","onProgress","speedControl","userSpeed","cyclesPerSecond","firstCanvas","startTime","renderFrame","now","elapsed","progress","animProgress","totalSize","sum","chunk","W","u","_","$","C","N","y","l","t","n","b","P","S","M","h","I","q","o","U","A","m","c","f","d","w","R","E","x","p","g","T","B","F","O","r","SIGNATURE","IMAGE_DESCRIPTOR","EXTENSION","EXTENSION_APPLICATION","EXTENSION_APPLICATION_BLOCK_SIZE","EXTENSION_GRAPHIC_CONTROL","EXTENSION_GRAPHIC_CONTROL_BLOCK_SIZE","TRAILER","mergeBuffers","buffers","container","total","array","offset","resovleSource","output","options","buffer","context2d","createImage","loadImage","createWorker","callbacks","workerUrl","workerNumber","workers","worker","onMessage","err","event","id","data","getWorker","index","transfer","Logger","isDebug","label","CropIndexedFrame","_config","controler","transparentIndex","lastIndexes","indexes","transparent","left","top","right","bottom","prevIndexes","isTrans","sameLine","index2","sameColumn","newWidth","newHeight","croppedIndexes","rawIndex","Writer","_chunkByteLength","cursor","char","EncodeGif","header","body","gif","colorTableSize","colorTableLength","writer","lzwEncode","minCodeSize","curSubblock","clearCode","codeMask","eoiCode","nextCode","curCodeSize","curShift","cur","emitBytesToBuffer","bitBlockSize","emitCode","ibCode","codeTable","curKey","curCode","k","len","EncodeIndexdFrame","delay","colorTable","disposal","FrameToIndexedFrame","colors","Finder","pixels","Encoder","Palette","key","backgroundColorIndex","maxColors","premultipliedAlpha","tint","frameWidth","frameHeight","format","color","controller","encode","FPS","DURATION","encodeGif","totalFrames","delays","indices","canvases","frames","createDownloadURL","capturePNG","triggerDownload","ext","a","formatters","seconds","createProgressStrategy","btn","intervalId","withLoadingState","action","progressType","origText","strategy","captureSVG","createDownloader","captureFunc","downloader","colorMatrices","createKeyTimes","steps","createValues","max","createSlice","duration","intensity","keyTimes","measureText","text","span","calculateDimensions","textWidth","padding","scale","calculateSliceDurations","normalizedHeights","baseDuration","variation","createGlitchEffect","input","params","isImg","colorSep","heightVariation","dims","fontSize","sliceHeights","totalHeight","currentTotal","sliceYs","sliceDurations","slices","colorMatrix","channel","colorOffset","dx","dur","query","parse","updateValue","getText","getParams","state","obj","prop","updatePreview","downscale","file","maxDim","res","dataUrl","setupDownloaders"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18]}